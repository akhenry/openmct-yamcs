// source: yamcs/protobuf/server/server_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var yamcs_api_annotations_pb = require('../../../yamcs/api/annotations_pb.js');
goog.object.extend(proto, yamcs_api_annotations_pb);
var yamcs_api_httpbody_pb = require('../../../yamcs/api/httpbody_pb.js');
goog.object.extend(proto, yamcs_api_httpbody_pb);
goog.exportSymbol('proto.yamcs.protobuf.server.ClientConnectionInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.GetServerInfoResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.GetThreadRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.HttpTraffic', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ListRoutesResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ListThreadsRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ListThreadsResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ListTopicsResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ProcessInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.RootDirectory', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.RouteInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.SystemInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ThreadGroupInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.ThreadInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.TopicInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.server.TraceElementInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.GetThreadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.GetThreadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.GetThreadRequest.displayName = 'proto.yamcs.protobuf.server.GetThreadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ListThreadsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.ListThreadsResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.ListThreadsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ListThreadsResponse.displayName = 'proto.yamcs.protobuf.server.ListThreadsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ListRoutesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.ListRoutesResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.ListRoutesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ListRoutesResponse.displayName = 'proto.yamcs.protobuf.server.ListRoutesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ListTopicsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.ListTopicsResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.ListTopicsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ListTopicsResponse.displayName = 'proto.yamcs.protobuf.server.ListTopicsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.HttpTraffic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.HttpTraffic.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.HttpTraffic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.HttpTraffic.displayName = 'proto.yamcs.protobuf.server.HttpTraffic';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.RouteInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.RouteInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.RouteInfo.displayName = 'proto.yamcs.protobuf.server.RouteInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.TopicInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.TopicInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.TopicInfo.displayName = 'proto.yamcs.protobuf.server.TopicInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.TraceElementInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.TraceElementInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.TraceElementInfo.displayName = 'proto.yamcs.protobuf.server.TraceElementInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ListThreadsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.ListThreadsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ListThreadsRequest.displayName = 'proto.yamcs.protobuf.server.ListThreadsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ThreadGroupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.ThreadGroupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ThreadGroupInfo.displayName = 'proto.yamcs.protobuf.server.ThreadGroupInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ThreadInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.ThreadInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.ThreadInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ThreadInfo.displayName = 'proto.yamcs.protobuf.server.ThreadInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.GetServerInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.GetServerInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.GetServerInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.GetServerInfoResponse.displayName = 'proto.yamcs.protobuf.server.GetServerInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.displayName = 'proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.displayName = 'proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ClientConnectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.ClientConnectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ClientConnectionInfo.displayName = 'proto.yamcs.protobuf.server.ClientConnectionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.displayName = 'proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.SystemInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.SystemInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.SystemInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.SystemInfo.displayName = 'proto.yamcs.protobuf.server.SystemInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.RootDirectory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.server.RootDirectory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.RootDirectory.displayName = 'proto.yamcs.protobuf.server.RootDirectory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.server.ProcessInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.server.ProcessInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.server.ProcessInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.server.ProcessInfo.displayName = 'proto.yamcs.protobuf.server.ProcessInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.GetThreadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.GetThreadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.GetThreadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetThreadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.GetThreadRequest}
 */
proto.yamcs.protobuf.server.GetThreadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.GetThreadRequest;
  return proto.yamcs.protobuf.server.GetThreadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.GetThreadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.GetThreadRequest}
 */
proto.yamcs.protobuf.server.GetThreadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.GetThreadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.GetThreadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.GetThreadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetThreadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.yamcs.protobuf.server.GetThreadRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.GetThreadRequest} returns this
 */
proto.yamcs.protobuf.server.GetThreadRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetThreadRequest} returns this
 */
proto.yamcs.protobuf.server.GetThreadRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetThreadRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.ListThreadsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ListThreadsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ListThreadsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ListThreadsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListThreadsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    threadsList: jspb.Message.toObjectList(msg.getThreadsList(),
    proto.yamcs.protobuf.server.ThreadInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ListThreadsResponse}
 */
proto.yamcs.protobuf.server.ListThreadsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ListThreadsResponse;
  return proto.yamcs.protobuf.server.ListThreadsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ListThreadsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ListThreadsResponse}
 */
proto.yamcs.protobuf.server.ListThreadsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.server.ThreadInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.ThreadInfo.deserializeBinaryFromReader);
      msg.addThreads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ListThreadsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ListThreadsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ListThreadsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListThreadsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.server.ThreadInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThreadInfo threads = 1;
 * @return {!Array<!proto.yamcs.protobuf.server.ThreadInfo>}
 */
proto.yamcs.protobuf.server.ListThreadsResponse.prototype.getThreadsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.ThreadInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.ThreadInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.ThreadInfo>} value
 * @return {!proto.yamcs.protobuf.server.ListThreadsResponse} returns this
*/
proto.yamcs.protobuf.server.ListThreadsResponse.prototype.setThreadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.ThreadInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.ThreadInfo}
 */
proto.yamcs.protobuf.server.ListThreadsResponse.prototype.addThreads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.server.ThreadInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.ListThreadsResponse} returns this
 */
proto.yamcs.protobuf.server.ListThreadsResponse.prototype.clearThreadsList = function() {
  return this.setThreadsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.ListRoutesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ListRoutesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ListRoutesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ListRoutesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListRoutesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    routesList: jspb.Message.toObjectList(msg.getRoutesList(),
    proto.yamcs.protobuf.server.RouteInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ListRoutesResponse}
 */
proto.yamcs.protobuf.server.ListRoutesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ListRoutesResponse;
  return proto.yamcs.protobuf.server.ListRoutesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ListRoutesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ListRoutesResponse}
 */
proto.yamcs.protobuf.server.ListRoutesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.server.RouteInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.RouteInfo.deserializeBinaryFromReader);
      msg.addRoutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ListRoutesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ListRoutesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ListRoutesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListRoutesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.server.RouteInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RouteInfo routes = 1;
 * @return {!Array<!proto.yamcs.protobuf.server.RouteInfo>}
 */
proto.yamcs.protobuf.server.ListRoutesResponse.prototype.getRoutesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.RouteInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.RouteInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.RouteInfo>} value
 * @return {!proto.yamcs.protobuf.server.ListRoutesResponse} returns this
*/
proto.yamcs.protobuf.server.ListRoutesResponse.prototype.setRoutesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.RouteInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.RouteInfo}
 */
proto.yamcs.protobuf.server.ListRoutesResponse.prototype.addRoutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.server.RouteInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.ListRoutesResponse} returns this
 */
proto.yamcs.protobuf.server.ListRoutesResponse.prototype.clearRoutesList = function() {
  return this.setRoutesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.ListTopicsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ListTopicsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ListTopicsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ListTopicsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListTopicsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    topicsList: jspb.Message.toObjectList(msg.getTopicsList(),
    proto.yamcs.protobuf.server.TopicInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ListTopicsResponse}
 */
proto.yamcs.protobuf.server.ListTopicsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ListTopicsResponse;
  return proto.yamcs.protobuf.server.ListTopicsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ListTopicsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ListTopicsResponse}
 */
proto.yamcs.protobuf.server.ListTopicsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.server.TopicInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.TopicInfo.deserializeBinaryFromReader);
      msg.addTopics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ListTopicsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ListTopicsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ListTopicsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListTopicsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.server.TopicInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TopicInfo topics = 1;
 * @return {!Array<!proto.yamcs.protobuf.server.TopicInfo>}
 */
proto.yamcs.protobuf.server.ListTopicsResponse.prototype.getTopicsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.TopicInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.TopicInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.TopicInfo>} value
 * @return {!proto.yamcs.protobuf.server.ListTopicsResponse} returns this
*/
proto.yamcs.protobuf.server.ListTopicsResponse.prototype.setTopicsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.TopicInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.TopicInfo}
 */
proto.yamcs.protobuf.server.ListTopicsResponse.prototype.addTopics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.server.TopicInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.ListTopicsResponse} returns this
 */
proto.yamcs.protobuf.server.ListTopicsResponse.prototype.clearTopicsList = function() {
  return this.setTopicsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.HttpTraffic.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.HttpTraffic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.HttpTraffic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.HttpTraffic.toObject = function(includeInstance, msg) {
  var f, obj = {
    readbytes: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    writtenbytes: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    readthroughput: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    writethroughput: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(),
    proto.yamcs.protobuf.server.ClientConnectionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.HttpTraffic}
 */
proto.yamcs.protobuf.server.HttpTraffic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.HttpTraffic;
  return proto.yamcs.protobuf.server.HttpTraffic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.HttpTraffic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.HttpTraffic}
 */
proto.yamcs.protobuf.server.HttpTraffic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReadbytes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWrittenbytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReadthroughput(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWritethroughput(value);
      break;
    case 5:
      var value = new proto.yamcs.protobuf.server.ClientConnectionInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.ClientConnectionInfo.deserializeBinaryFromReader);
      msg.addConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.HttpTraffic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.HttpTraffic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.HttpTraffic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.yamcs.protobuf.server.ClientConnectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 readBytes = 1;
 * @return {number}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.getReadbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.setReadbytes = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.clearReadbytes = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.hasReadbytes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 writtenBytes = 2;
 * @return {number}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.getWrittenbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.setWrittenbytes = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.clearWrittenbytes = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.hasWrittenbytes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 readThroughput = 3;
 * @return {number}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.getReadthroughput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.setReadthroughput = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.clearReadthroughput = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.hasReadthroughput = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 writeThroughput = 4;
 * @return {number}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.getWritethroughput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.setWritethroughput = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.clearWritethroughput = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.hasWritethroughput = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated ClientConnectionInfo connections = 5;
 * @return {!Array<!proto.yamcs.protobuf.server.ClientConnectionInfo>}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.getConnectionsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.ClientConnectionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.ClientConnectionInfo, 5));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.ClientConnectionInfo>} value
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
*/
proto.yamcs.protobuf.server.HttpTraffic.prototype.setConnectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.ClientConnectionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo}
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.addConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.yamcs.protobuf.server.ClientConnectionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.HttpTraffic} returns this
 */
proto.yamcs.protobuf.server.HttpTraffic.prototype.clearConnectionsList = function() {
  return this.setConnectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.RouteInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.RouteInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.RouteInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    method: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    httpmethod: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    inputtype: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    outputtype: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    deprecated: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    requestcount: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    errorcount: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    logformat: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.RouteInfo}
 */
proto.yamcs.protobuf.server.RouteInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.RouteInfo;
  return proto.yamcs.protobuf.server.RouteInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.RouteInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.RouteInfo}
 */
proto.yamcs.protobuf.server.RouteInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setService(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHttpmethod(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputtype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputtype(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestcount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setErrorcount(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogformat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.RouteInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.RouteInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.RouteInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string service = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setService = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearService = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setMethod = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearMethod = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string httpMethod = 4;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getHttpmethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setHttpmethod = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearHttpmethod = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasHttpmethod = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string inputType = 6;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getInputtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setInputtype = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearInputtype = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasInputtype = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string outputType = 7;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getOutputtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setOutputtype = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearOutputtype = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasOutputtype = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool deprecated = 8;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setDeprecated = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearDeprecated = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasDeprecated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 requestCount = 9;
 * @return {number}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getRequestcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setRequestcount = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearRequestcount = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasRequestcount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 errorCount = 10;
 * @return {number}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getErrorcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setErrorcount = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearErrorcount = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasErrorcount = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string logFormat = 11;
 * @return {string}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.getLogformat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.setLogformat = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RouteInfo} returns this
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.clearLogformat = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RouteInfo.prototype.hasLogformat = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.TopicInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.TopicInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.TopicInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    topic: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    service: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    method: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    inputtype: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    outputtype: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    deprecated: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.TopicInfo}
 */
proto.yamcs.protobuf.server.TopicInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.TopicInfo;
  return proto.yamcs.protobuf.server.TopicInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.TopicInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.TopicInfo}
 */
proto.yamcs.protobuf.server.TopicInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setService(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputtype(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputtype(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.TopicInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.TopicInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.TopicInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string topic = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.setTopic = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.clearTopic = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.hasTopic = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string service = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.getService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.setService = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.clearService = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.hasService = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string method = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.setMethod = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.clearMethod = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string inputType = 5;
 * @return {string}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.getInputtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.setInputtype = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.clearInputtype = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.hasInputtype = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string outputType = 6;
 * @return {string}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.getOutputtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.setOutputtype = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.clearOutputtype = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.hasOutputtype = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool deprecated = 7;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.setDeprecated = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TopicInfo} returns this
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.clearDeprecated = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TopicInfo.prototype.hasDeprecated = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.TraceElementInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.TraceElementInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.TraceElementInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    classname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    filename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    methodname: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    linenumber: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo}
 */
proto.yamcs.protobuf.server.TraceElementInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.TraceElementInfo;
  return proto.yamcs.protobuf.server.TraceElementInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.TraceElementInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo}
 */
proto.yamcs.protobuf.server.TraceElementInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLinenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.TraceElementInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.TraceElementInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.TraceElementInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string className = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.getClassname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.setClassname = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.clearClassname = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.hasClassname = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string fileName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.setFilename = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.clearFilename = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.hasFilename = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string methodName = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.getMethodname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.setMethodname = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.clearMethodname = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.hasMethodname = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 lineNumber = 4;
 * @return {number}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.getLinenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.setLinenumber = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo} returns this
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.clearLinenumber = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.TraceElementInfo.prototype.hasLinenumber = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ListThreadsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ListThreadsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ListThreadsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListThreadsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    depth: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ListThreadsRequest}
 */
proto.yamcs.protobuf.server.ListThreadsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ListThreadsRequest;
  return proto.yamcs.protobuf.server.ListThreadsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ListThreadsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ListThreadsRequest}
 */
proto.yamcs.protobuf.server.ListThreadsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ListThreadsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ListThreadsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ListThreadsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ListThreadsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 depth = 1;
 * @return {number}
 */
proto.yamcs.protobuf.server.ListThreadsRequest.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.ListThreadsRequest} returns this
 */
proto.yamcs.protobuf.server.ListThreadsRequest.prototype.setDepth = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ListThreadsRequest} returns this
 */
proto.yamcs.protobuf.server.ListThreadsRequest.prototype.clearDepth = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ListThreadsRequest.prototype.hasDepth = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ThreadGroupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ThreadGroupInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    daemon: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    parent: (f = msg.getParent()) && proto.yamcs.protobuf.server.ThreadGroupInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ThreadGroupInfo;
  return proto.yamcs.protobuf.server.ThreadGroupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ThreadGroupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDaemon(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.server.ThreadGroupInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.ThreadGroupInfo.deserializeBinaryFromReader);
      msg.setParent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ThreadGroupInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ThreadGroupInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getParent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yamcs.protobuf.server.ThreadGroupInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool daemon = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.getDaemon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.setDaemon = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.clearDaemon = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.hasDaemon = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ThreadGroupInfo parent = 3;
 * @return {?proto.yamcs.protobuf.server.ThreadGroupInfo}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.getParent = function() {
  return /** @type{?proto.yamcs.protobuf.server.ThreadGroupInfo} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.server.ThreadGroupInfo, 3));
};


/**
 * @param {?proto.yamcs.protobuf.server.ThreadGroupInfo|undefined} value
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo} returns this
*/
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.setParent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadGroupInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.clearParent = function() {
  return this.setParent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadGroupInfo.prototype.hasParent = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.ThreadInfo.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ThreadInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ThreadInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ThreadInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    state: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    pb_native: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    suspended: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    group: (f = msg.getGroup()) && proto.yamcs.protobuf.server.ThreadGroupInfo.toObject(includeInstance, f),
    traceList: jspb.Message.toObjectList(msg.getTraceList(),
    proto.yamcs.protobuf.server.TraceElementInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo}
 */
proto.yamcs.protobuf.server.ThreadInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ThreadInfo;
  return proto.yamcs.protobuf.server.ThreadInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ThreadInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo}
 */
proto.yamcs.protobuf.server.ThreadInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNative(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuspended(value);
      break;
    case 6:
      var value = new proto.yamcs.protobuf.server.ThreadGroupInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.ThreadGroupInfo.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 7:
      var value = new proto.yamcs.protobuf.server.TraceElementInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.TraceElementInfo.deserializeBinaryFromReader);
      msg.addTrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ThreadInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ThreadInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ThreadInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.yamcs.protobuf.server.ThreadGroupInfo.serializeBinaryToWriter
    );
  }
  f = message.getTraceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.yamcs.protobuf.server.TraceElementInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.setState = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.clearState = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool native = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.getNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.setNative = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.clearNative = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.hasNative = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool suspended = 5;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.getSuspended = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.setSuspended = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.clearSuspended = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.hasSuspended = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ThreadGroupInfo group = 6;
 * @return {?proto.yamcs.protobuf.server.ThreadGroupInfo}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.getGroup = function() {
  return /** @type{?proto.yamcs.protobuf.server.ThreadGroupInfo} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.server.ThreadGroupInfo, 6));
};


/**
 * @param {?proto.yamcs.protobuf.server.ThreadGroupInfo|undefined} value
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
*/
proto.yamcs.protobuf.server.ThreadInfo.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated TraceElementInfo trace = 7;
 * @return {!Array<!proto.yamcs.protobuf.server.TraceElementInfo>}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.getTraceList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.TraceElementInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.TraceElementInfo, 7));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.TraceElementInfo>} value
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
*/
proto.yamcs.protobuf.server.ThreadInfo.prototype.setTraceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.TraceElementInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.TraceElementInfo}
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.addTrace = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.yamcs.protobuf.server.TraceElementInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.ThreadInfo} returns this
 */
proto.yamcs.protobuf.server.ThreadInfo.prototype.clearTraceList = function() {
  return this.setTraceList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.repeatedFields_ = [5,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.GetServerInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    yamcsversion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    revision: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    serverid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    defaultyamcsinstance: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    pluginsList: jspb.Message.toObjectList(msg.getPluginsList(),
    proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.toObject, includeInstance),
    commandoptionsList: jspb.Message.toObjectList(msg.getCommandoptionsList(),
    proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.GetServerInfoResponse;
  return proto.yamcs.protobuf.server.GetServerInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setYamcsversion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevision(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultyamcsinstance(value);
      break;
    case 5:
      var value = new proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.deserializeBinaryFromReader);
      msg.addPlugins(value);
      break;
    case 7:
      var value = new proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.deserializeBinaryFromReader);
      msg.addCommandoptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.GetServerInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPluginsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.serializeBinaryToWriter
    );
  }
  f = message.getCommandoptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    version: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    vendor: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo;
  return proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string vendor = 4;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.getVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.setVendor = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.clearVendor = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo.prototype.hasVendor = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    verbosename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    help: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo;
  return proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerbosename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string verboseName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.getVerbosename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.setVerbosename = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.clearVerbosename = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.hasVerbosename = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.setType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.clearType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string help = 4;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.setHelp = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.clearHelp = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo.prototype.hasHelp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string yamcsVersion = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.getYamcsversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.setYamcsversion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.clearYamcsversion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.hasYamcsversion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string revision = 6;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.getRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.setRevision = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.clearRevision = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string serverId = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.getServerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.setServerid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.clearServerid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.hasServerid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string defaultYamcsInstance = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.getDefaultyamcsinstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.setDefaultyamcsinstance = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.clearDefaultyamcsinstance = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.hasDefaultyamcsinstance = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated PluginInfo plugins = 5;
 * @return {!Array<!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo>}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.getPluginsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo, 5));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo>} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
*/
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.setPluginsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.addPlugins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.yamcs.protobuf.server.GetServerInfoResponse.PluginInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.clearPluginsList = function() {
  return this.setPluginsList([]);
};


/**
 * repeated CommandOptionInfo commandOptions = 7;
 * @return {!Array<!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo>}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.getCommandoptionsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo, 7));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo>} value
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
*/
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.setCommandoptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo}
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.addCommandoptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.yamcs.protobuf.server.GetServerInfoResponse.CommandOptionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.GetServerInfoResponse} returns this
 */
proto.yamcs.protobuf.server.GetServerInfoResponse.prototype.clearCommandoptionsList = function() {
  return this.setCommandoptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ClientConnectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ClientConnectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    open: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    active: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    writable: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    remoteaddress: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    readbytes: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    writtenbytes: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    readthroughput: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    writethroughput: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    httprequest: (f = msg.getHttprequest()) && proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.toObject(includeInstance, f),
    username: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ClientConnectionInfo;
  return proto.yamcs.protobuf.server.ClientConnectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ClientConnectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpen(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWritable(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteaddress(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReadbytes(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWrittenbytes(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReadthroughput(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWritethroughput(value);
      break;
    case 10:
      var value = new proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.deserializeBinaryFromReader);
      msg.setHttprequest(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ClientConnectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ClientConnectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getHttprequest();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    protocol: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    method: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    uri: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    keepalive: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    useragent: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo;
  return proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtocol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeepalive(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUseragent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string protocol = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.getProtocol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.setProtocol = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.clearProtocol = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.hasProtocol = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.setMethod = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.clearMethod = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string uri = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.setUri = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.clearUri = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.hasUri = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool keepAlive = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.getKeepalive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.setKeepalive = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.clearKeepalive = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.hasKeepalive = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string userAgent = 5;
 * @return {string}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.getUseragent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.setUseragent = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.clearUseragent = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo.prototype.hasUseragent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool open = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getOpen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setOpen = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearOpen = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasOpen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool active = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearActive = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasActive = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool writable = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getWritable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setWritable = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearWritable = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasWritable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string remoteAddress = 5;
 * @return {string}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getRemoteaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setRemoteaddress = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearRemoteaddress = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasRemoteaddress = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 readBytes = 6;
 * @return {number}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getReadbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setReadbytes = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearReadbytes = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasReadbytes = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 writtenBytes = 7;
 * @return {number}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getWrittenbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setWrittenbytes = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearWrittenbytes = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasWrittenbytes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 readThroughput = 8;
 * @return {number}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getReadthroughput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setReadthroughput = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearReadthroughput = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasReadthroughput = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 writeThroughput = 9;
 * @return {number}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getWritethroughput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setWritethroughput = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearWritethroughput = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasWritethroughput = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional HttpRequestInfo httpRequest = 10;
 * @return {?proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getHttprequest = function() {
  return /** @type{?proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo, 10));
};


/**
 * @param {?proto.yamcs.protobuf.server.ClientConnectionInfo.HttpRequestInfo|undefined} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
*/
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setHttprequest = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearHttprequest = function() {
  return this.setHttprequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasHttprequest = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string username = 11;
 * @return {string}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ClientConnectionInfo} returns this
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ClientConnectionInfo.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.SystemInfo.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.SystemInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.SystemInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.SystemInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    yamcsversion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    revision: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    serverid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    uptime: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    jvm: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    workingdirectory: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    configdirectory: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    datadirectory: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    cachedirectory: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    os: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    arch: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    availableprocessors: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    loadaverage: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    heapmemory: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    usedheapmemory: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    maxheapmemory: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    nonheapmemory: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    usednonheapmemory: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    maxnonheapmemory: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    jvmthreadcount: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    rootdirectoriesList: jspb.Message.toObjectList(msg.getRootdirectoriesList(),
    proto.yamcs.protobuf.server.RootDirectory.toObject, includeInstance),
    process: (f = msg.getProcess()) && proto.yamcs.protobuf.server.ProcessInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.SystemInfo}
 */
proto.yamcs.protobuf.server.SystemInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.SystemInfo;
  return proto.yamcs.protobuf.server.SystemInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.SystemInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.SystemInfo}
 */
proto.yamcs.protobuf.server.SystemInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setYamcsversion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevision(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUptime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setJvm(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkingdirectory(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigdirectory(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadirectory(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCachedirectory(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOs(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setArch(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableprocessors(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLoadaverage(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeapmemory(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUsedheapmemory(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxheapmemory(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNonheapmemory(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUsednonheapmemory(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxnonheapmemory(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJvmthreadcount(value);
      break;
    case 22:
      var value = new proto.yamcs.protobuf.server.RootDirectory;
      reader.readMessage(value,proto.yamcs.protobuf.server.RootDirectory.deserializeBinaryFromReader);
      msg.addRootdirectories(value);
      break;
    case 23:
      var value = new proto.yamcs.protobuf.server.ProcessInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.ProcessInfo.deserializeBinaryFromReader);
      msg.setProcess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.SystemInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.SystemInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.SystemInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getRootdirectoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.yamcs.protobuf.server.RootDirectory.serializeBinaryToWriter
    );
  }
  f = message.getProcess();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.yamcs.protobuf.server.ProcessInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string yamcsVersion = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getYamcsversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setYamcsversion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearYamcsversion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasYamcsversion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string revision = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setRevision = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearRevision = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string serverId = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getServerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setServerid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearServerid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasServerid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 uptime = 5;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getUptime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setUptime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearUptime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasUptime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string jvm = 6;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getJvm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setJvm = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearJvm = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasJvm = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string workingDirectory = 7;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getWorkingdirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setWorkingdirectory = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearWorkingdirectory = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasWorkingdirectory = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string configDirectory = 8;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getConfigdirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setConfigdirectory = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearConfigdirectory = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasConfigdirectory = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string dataDirectory = 9;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getDatadirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setDatadirectory = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearDatadirectory = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasDatadirectory = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string cacheDirectory = 10;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getCachedirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setCachedirectory = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearCachedirectory = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasCachedirectory = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string os = 11;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getOs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setOs = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearOs = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasOs = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string arch = 12;
 * @return {string}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getArch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setArch = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearArch = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasArch = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 availableProcessors = 13;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getAvailableprocessors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setAvailableprocessors = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearAvailableprocessors = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasAvailableprocessors = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double loadAverage = 14;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getLoadaverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setLoadaverage = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearLoadaverage = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasLoadaverage = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int64 heapMemory = 15;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getHeapmemory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setHeapmemory = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearHeapmemory = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasHeapmemory = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int64 usedHeapMemory = 16;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getUsedheapmemory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setUsedheapmemory = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearUsedheapmemory = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasUsedheapmemory = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int64 maxHeapMemory = 17;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getMaxheapmemory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setMaxheapmemory = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearMaxheapmemory = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasMaxheapmemory = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int64 nonHeapMemory = 18;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getNonheapmemory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setNonheapmemory = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearNonheapmemory = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasNonheapmemory = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional int64 usedNonHeapMemory = 19;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getUsednonheapmemory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setUsednonheapmemory = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearUsednonheapmemory = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasUsednonheapmemory = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional int64 maxNonHeapMemory = 20;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getMaxnonheapmemory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setMaxnonheapmemory = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearMaxnonheapmemory = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasMaxnonheapmemory = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int64 jvmThreadCount = 21;
 * @return {number}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getJvmthreadcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.setJvmthreadcount = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearJvmthreadcount = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasJvmthreadcount = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated RootDirectory rootDirectories = 22;
 * @return {!Array<!proto.yamcs.protobuf.server.RootDirectory>}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getRootdirectoriesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.RootDirectory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.RootDirectory, 22));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.RootDirectory>} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
*/
proto.yamcs.protobuf.server.SystemInfo.prototype.setRootdirectoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.RootDirectory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.RootDirectory}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.addRootdirectories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.yamcs.protobuf.server.RootDirectory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearRootdirectoriesList = function() {
  return this.setRootdirectoriesList([]);
};


/**
 * optional ProcessInfo process = 23;
 * @return {?proto.yamcs.protobuf.server.ProcessInfo}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.getProcess = function() {
  return /** @type{?proto.yamcs.protobuf.server.ProcessInfo} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.server.ProcessInfo, 23));
};


/**
 * @param {?proto.yamcs.protobuf.server.ProcessInfo|undefined} value
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
*/
proto.yamcs.protobuf.server.SystemInfo.prototype.setProcess = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.server.SystemInfo} returns this
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.clearProcess = function() {
  return this.setProcess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.SystemInfo.prototype.hasProcess = function() {
  return jspb.Message.getField(this, 23) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.RootDirectory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.RootDirectory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.RootDirectory.toObject = function(includeInstance, msg) {
  var f, obj = {
    directory: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    totalspace: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    unallocatedspace: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    usablespace: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.RootDirectory}
 */
proto.yamcs.protobuf.server.RootDirectory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.RootDirectory;
  return proto.yamcs.protobuf.server.RootDirectory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.RootDirectory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.RootDirectory}
 */
proto.yamcs.protobuf.server.RootDirectory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalspace(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnallocatedspace(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUsablespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.RootDirectory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.RootDirectory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.RootDirectory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string directory = 1;
 * @return {string}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.setDirectory = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.clearDirectory = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.hasDirectory = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 totalSpace = 3;
 * @return {number}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.getTotalspace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.setTotalspace = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.clearTotalspace = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.hasTotalspace = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 unallocatedSpace = 4;
 * @return {number}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.getUnallocatedspace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.setUnallocatedspace = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.clearUnallocatedspace = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.hasUnallocatedspace = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 usableSpace = 5;
 * @return {number}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.getUsablespace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.setUsablespace = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.RootDirectory} returns this
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.clearUsablespace = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.RootDirectory.prototype.hasUsablespace = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.server.ProcessInfo.repeatedFields_ = [4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.server.ProcessInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.server.ProcessInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ProcessInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    pid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    user: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    command: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    argumentsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    starttime: (f = msg.getStarttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    totalcpuduration: (f = msg.getTotalcpuduration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.yamcs.protobuf.server.ProcessInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo}
 */
proto.yamcs.protobuf.server.ProcessInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.server.ProcessInfo;
  return proto.yamcs.protobuf.server.ProcessInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.server.ProcessInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo}
 */
proto.yamcs.protobuf.server.ProcessInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addArguments(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStarttime(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTotalcpuduration(value);
      break;
    case 7:
      var value = new proto.yamcs.protobuf.server.ProcessInfo;
      reader.readMessage(value,proto.yamcs.protobuf.server.ProcessInfo.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.server.ProcessInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.server.ProcessInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.server.ProcessInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArgumentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getStarttime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTotalcpuduration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.yamcs.protobuf.server.ProcessInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 pid = 1;
 * @return {number}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.getPid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.setPid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.clearPid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.hasPid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.setUser = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.clearUser = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string command = 3;
 * @return {string}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.setCommand = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.clearCommand = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string arguments = 4;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.getArgumentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.setArgumentsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.addArguments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.clearArgumentsList = function() {
  return this.setArgumentsList([]);
};


/**
 * optional google.protobuf.Timestamp startTime = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.getStarttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
*/
proto.yamcs.protobuf.server.ProcessInfo.prototype.setStarttime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.clearStarttime = function() {
  return this.setStarttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.hasStarttime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Duration totalCpuDuration = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.getTotalcpuduration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
*/
proto.yamcs.protobuf.server.ProcessInfo.prototype.setTotalcpuduration = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.clearTotalcpuduration = function() {
  return this.setTotalcpuduration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.hasTotalcpuduration = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated ProcessInfo children = 7;
 * @return {!Array<!proto.yamcs.protobuf.server.ProcessInfo>}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.server.ProcessInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.server.ProcessInfo, 7));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.server.ProcessInfo>} value
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
*/
proto.yamcs.protobuf.server.ProcessInfo.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.yamcs.protobuf.server.ProcessInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.server.ProcessInfo}
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.yamcs.protobuf.server.ProcessInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.server.ProcessInfo} returns this
 */
proto.yamcs.protobuf.server.ProcessInfo.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};


goog.object.extend(exports, proto.yamcs.protobuf.server);
