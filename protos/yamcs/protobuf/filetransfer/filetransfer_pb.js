// source: yamcs/protobuf/filetransfer/filetransfer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var yamcs_api_annotations_pb = require('../../../yamcs/api/annotations_pb.js');
goog.object.extend(proto, yamcs_api_annotations_pb);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.CancelTransferRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.CreateTransferRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.EntityInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.FileTransferCapabilities', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.FileTransferOption', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.FileTransferOption.Type', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.FileTransferOption.Value', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.GetTransferRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.ListFilesRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.ListFilesResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.ListTransfersRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.ListTransfersResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.PauseTransferRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.RemoteFile', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.ResumeTransferRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.TransactionId', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.TransferDirection', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.TransferInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.filetransfer.TransferState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.TransactionId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.TransactionId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.TransactionId.displayName = 'proto.yamcs.protobuf.filetransfer.TransactionId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.displayName = 'proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.displayName = 'proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.FileTransferCapabilities, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.displayName = 'proto.yamcs.protobuf.filetransfer.FileTransferCapabilities';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.displayName = 'proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.EntityInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.EntityInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.EntityInfo.displayName = 'proto.yamcs.protobuf.filetransfer.EntityInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.TransferInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.TransferInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.TransferInfo.displayName = 'proto.yamcs.protobuf.filetransfer.TransferInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.CreateTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.CreateTransferRequest.displayName = 'proto.yamcs.protobuf.filetransfer.CreateTransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.displayName = 'proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.displayName = 'proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.PauseTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.PauseTransferRequest.displayName = 'proto.yamcs.protobuf.filetransfer.PauseTransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.CancelTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.CancelTransferRequest.displayName = 'proto.yamcs.protobuf.filetransfer.CancelTransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.ResumeTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.displayName = 'proto.yamcs.protobuf.filetransfer.ResumeTransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.ListTransfersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.ListTransfersRequest.displayName = 'proto.yamcs.protobuf.filetransfer.ListTransfersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.GetTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.GetTransferRequest.displayName = 'proto.yamcs.protobuf.filetransfer.GetTransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.filetransfer.ListTransfersResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.ListTransfersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.ListTransfersResponse.displayName = 'proto.yamcs.protobuf.filetransfer.ListTransfersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.displayName = 'proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.ListFilesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.ListFilesRequest.displayName = 'proto.yamcs.protobuf.filetransfer.ListFilesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.RemoteFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.RemoteFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.RemoteFile.displayName = 'proto.yamcs.protobuf.filetransfer.RemoteFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.filetransfer.ListFilesResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.ListFilesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.ListFilesResponse.displayName = 'proto.yamcs.protobuf.filetransfer.ListFilesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.filetransfer.FileTransferOption.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.FileTransferOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.FileTransferOption.displayName = 'proto.yamcs.protobuf.filetransfer.FileTransferOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.filetransfer.FileTransferOption.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.displayName = 'proto.yamcs.protobuf.filetransfer.FileTransferOption.Value';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.TransactionId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.TransactionId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.TransactionId.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequencenumber: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    initiatorentity: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.TransactionId}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.TransactionId;
  return proto.yamcs.protobuf.filetransfer.TransactionId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.TransactionId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.TransactionId}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSequencenumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInitiatorentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.TransactionId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.TransactionId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.TransactionId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 sequenceNumber = 1;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.getSequencenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransactionId} returns this
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.setSequencenumber = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransactionId} returns this
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.clearSequencenumber = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.hasSequencenumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 initiatorEntity = 2;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.getInitiatorentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransactionId} returns this
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.setInitiatorentity = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransactionId} returns this
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.clearInitiatorentity = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransactionId.prototype.hasInitiatorentity = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest;
  return proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse;
  return proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.deserializeBinaryFromReader);
      msg.addServices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FileTransferServiceInfo services = 1;
 * @return {!Array<!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo>}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.prototype.getServicesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo>} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse} returns this
*/
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.prototype.setServicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo}
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.prototype.addServices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFileTransferServicesResponse.prototype.clearServicesList = function() {
  return this.setServicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.toObject = function(includeInstance, msg) {
  var f, obj = {
    upload: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    download: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    reliability: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    remotepath: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    filelist: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    hastransfertype: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.FileTransferCapabilities;
  return proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpload(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDownload(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReliability(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRemotepath(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFilelist(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHastransfertype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bool upload = 1;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.getUpload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.setUpload = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.clearUpload = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.hasUpload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool download = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.getDownload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.setDownload = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.clearDownload = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.hasDownload = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool reliability = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.getReliability = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.setReliability = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.clearReliability = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.hasReliability = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool remotePath = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.getRemotepath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.setRemotepath = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.clearRemotepath = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.hasRemotepath = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool fileList = 5;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.getFilelist = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.setFilelist = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.clearFilelist = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.hasFilelist = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool hasTransferType = 6;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.getHastransfertype = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.setHastransfertype = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.clearHastransfertype = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.prototype.hasHastransfertype = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.repeatedFields_ = [3,4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    localentitiesList: jspb.Message.toObjectList(msg.getLocalentitiesList(),
    proto.yamcs.protobuf.filetransfer.EntityInfo.toObject, includeInstance),
    remoteentitiesList: jspb.Message.toObjectList(msg.getRemoteentitiesList(),
    proto.yamcs.protobuf.filetransfer.EntityInfo.toObject, includeInstance),
    capabilities: (f = msg.getCapabilities()) && proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.toObject(includeInstance, f),
    transferoptionsList: jspb.Message.toObjectList(msg.getTransferoptionsList(),
    proto.yamcs.protobuf.filetransfer.FileTransferOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo;
  return proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.filetransfer.EntityInfo;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.EntityInfo.deserializeBinaryFromReader);
      msg.addLocalentities(value);
      break;
    case 4:
      var value = new proto.yamcs.protobuf.filetransfer.EntityInfo;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.EntityInfo.deserializeBinaryFromReader);
      msg.addRemoteentities(value);
      break;
    case 5:
      var value = new proto.yamcs.protobuf.filetransfer.FileTransferCapabilities;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.deserializeBinaryFromReader);
      msg.setCapabilities(value);
      break;
    case 6:
      var value = new proto.yamcs.protobuf.filetransfer.FileTransferOption;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.FileTransferOption.deserializeBinaryFromReader);
      msg.addTransferoptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocalentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.yamcs.protobuf.filetransfer.EntityInfo.serializeBinaryToWriter
    );
  }
  f = message.getRemoteentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.yamcs.protobuf.filetransfer.EntityInfo.serializeBinaryToWriter
    );
  }
  f = message.getCapabilities();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.yamcs.protobuf.filetransfer.FileTransferCapabilities.serializeBinaryToWriter
    );
  }
  f = message.getTransferoptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.yamcs.protobuf.filetransfer.FileTransferOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated EntityInfo localEntities = 3;
 * @return {!Array<!proto.yamcs.protobuf.filetransfer.EntityInfo>}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.getLocalentitiesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.filetransfer.EntityInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.filetransfer.EntityInfo, 3));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.filetransfer.EntityInfo>} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
*/
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.setLocalentitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.EntityInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.addLocalentities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.yamcs.protobuf.filetransfer.EntityInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.clearLocalentitiesList = function() {
  return this.setLocalentitiesList([]);
};


/**
 * repeated EntityInfo remoteEntities = 4;
 * @return {!Array<!proto.yamcs.protobuf.filetransfer.EntityInfo>}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.getRemoteentitiesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.filetransfer.EntityInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.filetransfer.EntityInfo, 4));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.filetransfer.EntityInfo>} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
*/
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.setRemoteentitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.EntityInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.addRemoteentities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.yamcs.protobuf.filetransfer.EntityInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.clearRemoteentitiesList = function() {
  return this.setRemoteentitiesList([]);
};


/**
 * optional FileTransferCapabilities capabilities = 5;
 * @return {?proto.yamcs.protobuf.filetransfer.FileTransferCapabilities}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.getCapabilities = function() {
  return /** @type{?proto.yamcs.protobuf.filetransfer.FileTransferCapabilities} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.filetransfer.FileTransferCapabilities, 5));
};


/**
 * @param {?proto.yamcs.protobuf.filetransfer.FileTransferCapabilities|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
*/
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.setCapabilities = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.clearCapabilities = function() {
  return this.setCapabilities(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.hasCapabilities = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated FileTransferOption transferOptions = 6;
 * @return {!Array<!proto.yamcs.protobuf.filetransfer.FileTransferOption>}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.getTransferoptionsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.filetransfer.FileTransferOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.filetransfer.FileTransferOption, 6));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.filetransfer.FileTransferOption>} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
*/
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.setTransferoptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption}
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.addTransferoptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.yamcs.protobuf.filetransfer.FileTransferOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferServiceInfo.prototype.clearTransferoptionsList = function() {
  return this.setTransferoptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.EntityInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.EntityInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.EntityInfo;
  return proto.yamcs.protobuf.filetransfer.EntityInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.EntityInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.EntityInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.EntityInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.EntityInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.EntityInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.TransferInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.TransferInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    starttime: (f = msg.getStarttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    state: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    bucket: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    objectname: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    remotepath: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    direction: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    totalsize: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    sizetransferred: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    reliable: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    failurereason: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    transactionid: (f = msg.getTransactionid()) && proto.yamcs.protobuf.filetransfer.TransactionId.toObject(includeInstance, f),
    creationtime: (f = msg.getCreationtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    transfertype: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.TransferInfo;
  return proto.yamcs.protobuf.filetransfer.TransferInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.TransferInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStarttime(value);
      break;
    case 3:
      var value = /** @type {!proto.yamcs.protobuf.filetransfer.TransferState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemotepath(value);
      break;
    case 7:
      var value = /** @type {!proto.yamcs.protobuf.filetransfer.TransferDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalsize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSizetransferred(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReliable(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    case 12:
      var value = new proto.yamcs.protobuf.filetransfer.TransactionId;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.TransactionId.deserializeBinaryFromReader);
      msg.setTransactionid(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationtime(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransfertype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.TransferInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.TransferInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getStarttime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.yamcs.protobuf.filetransfer.TransferState} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!proto.yamcs.protobuf.filetransfer.TransferDirection} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTransactionid();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.yamcs.protobuf.filetransfer.TransactionId.serializeBinaryToWriter
    );
  }
  f = message.getCreationtime();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp startTime = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getStarttime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
*/
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setStarttime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearStarttime = function() {
  return this.setStarttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasStarttime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TransferState state = 3;
 * @return {!proto.yamcs.protobuf.filetransfer.TransferState}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getState = function() {
  return /** @type {!proto.yamcs.protobuf.filetransfer.TransferState} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.TransferState} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setState = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearState = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string bucket = 4;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setBucket = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearBucket = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasBucket = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string objectName = 5;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getObjectname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setObjectname = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearObjectname = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasObjectname = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string remotePath = 6;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getRemotepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setRemotepath = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearRemotepath = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasRemotepath = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TransferDirection direction = 7;
 * @return {!proto.yamcs.protobuf.filetransfer.TransferDirection}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getDirection = function() {
  return /** @type {!proto.yamcs.protobuf.filetransfer.TransferDirection} */ (jspb.Message.getFieldWithDefault(this, 7, 1));
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.TransferDirection} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setDirection = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearDirection = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 totalSize = 8;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getTotalsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setTotalsize = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearTotalsize = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasTotalsize = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 sizeTransferred = 9;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getSizetransferred = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setSizetransferred = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearSizetransferred = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasSizetransferred = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool reliable = 10;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getReliable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setReliable = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearReliable = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasReliable = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string failureReason = 11;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setFailurereason = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearFailurereason = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasFailurereason = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional TransactionId transactionId = 12;
 * @return {?proto.yamcs.protobuf.filetransfer.TransactionId}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getTransactionid = function() {
  return /** @type{?proto.yamcs.protobuf.filetransfer.TransactionId} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.filetransfer.TransactionId, 12));
};


/**
 * @param {?proto.yamcs.protobuf.filetransfer.TransactionId|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
*/
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setTransactionid = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearTransactionid = function() {
  return this.setTransactionid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasTransactionid = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp creationTime = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getCreationtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
*/
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setCreationtime = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearCreationtime = function() {
  return this.setCreationtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasCreationtime = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string transferType = 14;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.getTransfertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.setTransfertype = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo} returns this
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.clearTransfertype = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.TransferInfo.prototype.hasTransfertype = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.CreateTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    direction: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    bucket: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    objectname: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    remotepath: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    downloadoptions: (f = msg.getDownloadoptions()) && proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.toObject(includeInstance, f),
    uploadoptions: (f = msg.getUploadoptions()) && proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.toObject(includeInstance, f),
    source: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    destination: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    options: (f = msg.getOptions()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.CreateTransferRequest;
  return proto.yamcs.protobuf.filetransfer.CreateTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 2:
      var value = /** @type {!proto.yamcs.protobuf.filetransfer.TransferDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucket(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemotepath(value);
      break;
    case 6:
      var value = new proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.deserializeBinaryFromReader);
      msg.setDownloadoptions(value);
      break;
    case 7:
      var value = new proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.deserializeBinaryFromReader);
      msg.setUploadoptions(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 11:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.CreateTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!proto.yamcs.protobuf.filetransfer.TransferDirection} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDownloadoptions();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.serializeBinaryToWriter
    );
  }
  f = message.getUploadoptions();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    overwrite: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    createpath: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    reliable: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    closurerequested: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions;
  return proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverwrite(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreatepath(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReliable(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClosurerequested(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool overwrite = 1;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.getOverwrite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.setOverwrite = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.clearOverwrite = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.hasOverwrite = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool createPath = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.getCreatepath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.setCreatepath = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.clearCreatepath = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.hasCreatepath = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool reliable = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.getReliable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.setReliable = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.clearReliable = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.hasReliable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool closureRequested = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.getClosurerequested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.setClosurerequested = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.clearClosurerequested = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions.prototype.hasClosurerequested = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    overwrite: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    createpath: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    reliable: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    closurerequested: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions;
  return proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverwrite(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreatepath(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReliable(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClosurerequested(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool overwrite = 1;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.getOverwrite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.setOverwrite = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.clearOverwrite = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.hasOverwrite = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool createPath = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.getCreatepath = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.setCreatepath = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.clearCreatepath = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.hasCreatepath = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool reliable = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.getReliable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.setReliable = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.clearReliable = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.hasReliable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool closureRequested = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.getClosurerequested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.setClosurerequested = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.clearClosurerequested = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions.prototype.hasClosurerequested = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 8;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TransferDirection direction = 2;
 * @return {!proto.yamcs.protobuf.filetransfer.TransferDirection}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getDirection = function() {
  return /** @type {!proto.yamcs.protobuf.filetransfer.TransferDirection} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.TransferDirection} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setDirection = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearDirection = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string bucket = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getBucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setBucket = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearBucket = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasBucket = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string objectName = 4;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getObjectname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setObjectname = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearObjectname = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasObjectname = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string remotePath = 5;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getRemotepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setRemotepath = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearRemotepath = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasRemotepath = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DownloadOptions downloadOptions = 6;
 * @return {?proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getDownloadoptions = function() {
  return /** @type{?proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions, 6));
};


/**
 * @param {?proto.yamcs.protobuf.filetransfer.CreateTransferRequest.DownloadOptions|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
*/
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setDownloadoptions = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearDownloadoptions = function() {
  return this.setDownloadoptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasDownloadoptions = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional UploadOptions uploadOptions = 7;
 * @return {?proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getUploadoptions = function() {
  return /** @type{?proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions, 7));
};


/**
 * @param {?proto.yamcs.protobuf.filetransfer.CreateTransferRequest.UploadOptions|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
*/
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setUploadoptions = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearUploadoptions = function() {
  return this.setUploadoptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasUploadoptions = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string source = 9;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearSource = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string destination = 10;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Struct options = 11;
 * @return {?proto.google.protobuf.Struct}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 11));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
*/
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CreateTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CreateTransferRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.PauseTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.PauseTransferRequest;
  return proto.yamcs.protobuf.filetransfer.PauseTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.PauseTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 id = 2;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.PauseTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.PauseTransferRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.CancelTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.CancelTransferRequest;
  return proto.yamcs.protobuf.filetransfer.CancelTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.CancelTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 id = 2;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.CancelTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.CancelTransferRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.ResumeTransferRequest;
  return proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 id = 2;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ResumeTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ResumeTransferRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.ListTransfersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.ListTransfersRequest;
  return proto.yamcs.protobuf.filetransfer.ListTransfersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.ListTransfersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.GetTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.GetTransferRequest;
  return proto.yamcs.protobuf.filetransfer.GetTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.GetTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 id = 2;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.GetTransferRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.GetTransferRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.ListTransfersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.ListTransfersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfersList: jspb.Message.toObjectList(msg.getTransfersList(),
    proto.yamcs.protobuf.filetransfer.TransferInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersResponse}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.ListTransfersResponse;
  return proto.yamcs.protobuf.filetransfer.ListTransfersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.ListTransfersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersResponse}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.filetransfer.TransferInfo;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.TransferInfo.deserializeBinaryFromReader);
      msg.addTransfers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.ListTransfersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.ListTransfersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.filetransfer.TransferInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TransferInfo transfers = 1;
 * @return {!Array<!proto.yamcs.protobuf.filetransfer.TransferInfo>}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.prototype.getTransfersList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.filetransfer.TransferInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.filetransfer.TransferInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.filetransfer.TransferInfo>} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersResponse} returns this
*/
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.prototype.setTransfersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.TransferInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.filetransfer.TransferInfo}
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.prototype.addTransfers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.filetransfer.TransferInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.filetransfer.ListTransfersResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListTransfersResponse.prototype.clearTransfersList = function() {
  return this.setTransfersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest;
  return proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.SubscribeTransfersRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.ListFilesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    servicename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    source: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    destination: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    remotepath: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    options: (f = msg.getOptions()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.ListFilesRequest;
  return proto.yamcs.protobuf.filetransfer.ListFilesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemotepath(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.ListFilesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string serviceName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.getServicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.setServicename = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.clearServicename = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.hasServicename = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.clearSource = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string destination = 4;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string remotePath = 5;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.getRemotepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.setRemotepath = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.clearRemotepath = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.hasRemotepath = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Struct options = 6;
 * @return {?proto.google.protobuf.Struct}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 6));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
*/
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesRequest} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.RemoteFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.RemoteFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    isdirectory: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    size: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    modified: (f = msg.getModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.RemoteFile;
  return proto.yamcs.protobuf.filetransfer.RemoteFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.RemoteFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdirectory(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setModified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.RemoteFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.RemoteFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getModified();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool isDirectory = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.getIsdirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.setIsdirectory = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.clearIsdirectory = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.hasIsdirectory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 size = 3;
 * @return {number}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.setSize = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.clearSize = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.hasSize = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp modified = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.getModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
*/
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.setModified = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile} returns this
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.clearModified = function() {
  return this.setModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.RemoteFile.prototype.hasModified = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.ListFilesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.yamcs.protobuf.filetransfer.RemoteFile.toObject, includeInstance),
    destination: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    remotepath: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    listtime: (f = msg.getListtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.ListFilesResponse;
  return proto.yamcs.protobuf.filetransfer.ListFilesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.filetransfer.RemoteFile;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.RemoteFile.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemotepath(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setListtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.ListFilesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.filetransfer.RemoteFile.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getListtime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RemoteFile files = 1;
 * @return {!Array<!proto.yamcs.protobuf.filetransfer.RemoteFile>}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.filetransfer.RemoteFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.filetransfer.RemoteFile, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.filetransfer.RemoteFile>} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
*/
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.RemoteFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.filetransfer.RemoteFile}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.filetransfer.RemoteFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};


/**
 * optional string destination = 2;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string remotePath = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.getRemotepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.setRemotepath = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.clearRemotepath = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.hasRemotepath = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp listTime = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.getListtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
*/
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.setListtime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.ListFilesResponse} returns this
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.clearListtime = function() {
  return this.setListtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.ListFilesResponse.prototype.hasListtime = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.FileTransferOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    title: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    associatedtext: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    pb_default: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.toObject, includeInstance),
    allowcustomoption: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.FileTransferOption;
  return proto.yamcs.protobuf.filetransfer.FileTransferOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssociatedtext(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefault(value);
      break;
    case 7:
      var value = new proto.yamcs.protobuf.filetransfer.FileTransferOption.Value;
      reader.readMessage(value,proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcustomoption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.FileTransferOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Type} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Type = {
  BOOLEAN: 0,
  DOUBLE: 1,
  STRING: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    verbosename: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.filetransfer.FileTransferOption.Value;
  return proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerbosename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.clearValue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string verboseName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.getVerbosename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.setVerbosename = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.clearVerbosename = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.Value.prototype.hasVerbosename = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Type type = 2;
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Type}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getType = function() {
  return /** @type {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Type} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setTitle = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearTitle = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string associatedText = 5;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getAssociatedtext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setAssociatedtext = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearAssociatedtext = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.hasAssociatedtext = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string default = 6;
 * @return {string}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getDefault = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setDefault = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearDefault = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.hasDefault = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Value values = 7;
 * @return {!Array<!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value>}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.filetransfer.FileTransferOption.Value, 7));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value>} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
*/
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption.Value}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.yamcs.protobuf.filetransfer.FileTransferOption.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional bool allowCustomOption = 8;
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.getAllowcustomoption = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.setAllowcustomoption = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.filetransfer.FileTransferOption} returns this
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.clearAllowcustomoption = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.filetransfer.FileTransferOption.prototype.hasAllowcustomoption = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * @enum {number}
 */
proto.yamcs.protobuf.filetransfer.TransferDirection = {
  UPLOAD: 1,
  DOWNLOAD: 2
};

/**
 * @enum {number}
 */
proto.yamcs.protobuf.filetransfer.TransferState = {
  RUNNING: 1,
  PAUSED: 2,
  FAILED: 3,
  COMPLETED: 4,
  QUEUED: 5,
  CANCELLING: 6
};

goog.object.extend(exports, proto.yamcs.protobuf.filetransfer);
