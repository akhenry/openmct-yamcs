// source: yamcs/protobuf/table/table.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var yamcs_api_annotations_pb = require('../../../yamcs/api/annotations_pb.js');
goog.object.extend(proto, yamcs_api_annotations_pb);
var yamcs_protobuf_yamcs_pb = require('../../../yamcs/protobuf/yamcs_pb.js');
goog.object.extend(proto, yamcs_protobuf_yamcs_pb);
var yamcs_protobuf_yamcsManagement_yamcsManagement_pb = require('../../../yamcs/protobuf/yamcsManagement/yamcsManagement_pb.js');
goog.object.extend(proto, yamcs_protobuf_yamcsManagement_yamcsManagement_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.yamcs.protobuf.table.ColumnData', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ColumnInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.EnumValue', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ExecuteSqlRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.GetStreamRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.GetTableDataRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.GetTableRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ListStreamsRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ListStreamsResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ListTablesRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ListTablesResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ListValue', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.PartitioningInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.PartitioningInfo.PartitioningType', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ReadRowsRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.RebuildHistogramRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.RebuildHistogramResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.ResultSet', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.Row', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.Row.Cell', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.Row.ColumnInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.StreamData', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.StreamInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.SubscribeStreamRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.TableData', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.TableData.TableRecord', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.TableInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.WriteRowsExceptionDetail', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.WriteRowsRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.table.WriteRowsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.Row.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.Row.displayName = 'proto.yamcs.protobuf.table.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.Row.ColumnInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.Row.ColumnInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.Row.ColumnInfo.displayName = 'proto.yamcs.protobuf.table.Row.ColumnInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.Row.Cell = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.Row.Cell, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.Row.Cell.displayName = 'proto.yamcs.protobuf.table.Row.Cell';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ReadRowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.ReadRowsRequest.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.ReadRowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ReadRowsRequest.displayName = 'proto.yamcs.protobuf.table.ReadRowsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.WriteRowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.WriteRowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.WriteRowsRequest.displayName = 'proto.yamcs.protobuf.table.WriteRowsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.WriteRowsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.WriteRowsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.WriteRowsResponse.displayName = 'proto.yamcs.protobuf.table.WriteRowsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.WriteRowsExceptionDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.WriteRowsExceptionDetail.displayName = 'proto.yamcs.protobuf.table.WriteRowsExceptionDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ListValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.ListValue.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.ListValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ListValue.displayName = 'proto.yamcs.protobuf.table.ListValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.ExecuteSqlRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ExecuteSqlRequest.displayName = 'proto.yamcs.protobuf.table.ExecuteSqlRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ResultSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.ResultSet.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.ResultSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ResultSet.displayName = 'proto.yamcs.protobuf.table.ResultSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ListTablesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.ListTablesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ListTablesRequest.displayName = 'proto.yamcs.protobuf.table.ListTablesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ListTablesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.ListTablesResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.ListTablesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ListTablesResponse.displayName = 'proto.yamcs.protobuf.table.ListTablesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.GetTableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.GetTableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.GetTableRequest.displayName = 'proto.yamcs.protobuf.table.GetTableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.GetTableDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.GetTableDataRequest.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.GetTableDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.GetTableDataRequest.displayName = 'proto.yamcs.protobuf.table.GetTableDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ListStreamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.ListStreamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ListStreamsRequest.displayName = 'proto.yamcs.protobuf.table.ListStreamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ListStreamsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.ListStreamsResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.ListStreamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ListStreamsResponse.displayName = 'proto.yamcs.protobuf.table.ListStreamsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.GetStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.GetStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.GetStreamRequest.displayName = 'proto.yamcs.protobuf.table.GetStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.SubscribeStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.SubscribeStreamRequest.displayName = 'proto.yamcs.protobuf.table.SubscribeStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ColumnData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.ColumnData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ColumnData.displayName = 'proto.yamcs.protobuf.table.ColumnData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.StreamData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.StreamData.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.StreamData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.StreamData.displayName = 'proto.yamcs.protobuf.table.StreamData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.displayName = 'proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.TableData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.TableData.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.TableData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.TableData.displayName = 'proto.yamcs.protobuf.table.TableData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.TableData.TableRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.TableData.TableRecord.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.TableData.TableRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.TableData.TableRecord.displayName = 'proto.yamcs.protobuf.table.TableData.TableRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.ColumnInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.ColumnInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.ColumnInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.ColumnInfo.displayName = 'proto.yamcs.protobuf.table.ColumnInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.EnumValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.EnumValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.EnumValue.displayName = 'proto.yamcs.protobuf.table.EnumValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.TableInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.TableInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.TableInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.TableInfo.displayName = 'proto.yamcs.protobuf.table.TableInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.PartitioningInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.PartitioningInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.PartitioningInfo.displayName = 'proto.yamcs.protobuf.table.PartitioningInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.StreamInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.table.StreamInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.table.StreamInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.StreamInfo.displayName = 'proto.yamcs.protobuf.table.StreamInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.RebuildHistogramRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.RebuildHistogramRequest.displayName = 'proto.yamcs.protobuf.table.RebuildHistogramRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.table.RebuildHistogramResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.table.RebuildHistogramResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.table.RebuildHistogramResponse.displayName = 'proto.yamcs.protobuf.table.RebuildHistogramResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.Row.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.yamcs.protobuf.table.Row.ColumnInfo.toObject, includeInstance),
    cellsList: jspb.Message.toObjectList(msg.getCellsList(),
    proto.yamcs.protobuf.table.Row.Cell.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.Row}
 */
proto.yamcs.protobuf.table.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.Row;
  return proto.yamcs.protobuf.table.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.Row}
 */
proto.yamcs.protobuf.table.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.table.Row.ColumnInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.Row.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.yamcs.protobuf.table.Row.Cell;
      reader.readMessage(value,proto.yamcs.protobuf.table.Row.Cell.deserializeBinaryFromReader);
      msg.addCells(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.table.Row.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getCellsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.yamcs.protobuf.table.Row.Cell.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.Row.ColumnInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.Row.ColumnInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    protoclass: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.Row.ColumnInfo;
  return proto.yamcs.protobuf.table.Row.ColumnInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.Row.ColumnInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProtoclass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.Row.ColumnInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.Row.ColumnInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.setType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.clearType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string protoClass = 4;
 * @return {string}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.getProtoclass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.setProtoclass = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.clearProtoclass = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.Row.ColumnInfo.prototype.hasProtoclass = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.Row.Cell.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.Row.Cell} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.Row.Cell.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.Row.Cell}
 */
proto.yamcs.protobuf.table.Row.Cell.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.Row.Cell;
  return proto.yamcs.protobuf.table.Row.Cell.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.Row.Cell} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.Row.Cell}
 */
proto.yamcs.protobuf.table.Row.Cell.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setColumnid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.Row.Cell.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.Row.Cell} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.Row.Cell.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional uint32 columnId = 1;
 * @return {number}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.getColumnid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.Row.Cell} returns this
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.setColumnid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.Row.Cell} returns this
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.clearColumnid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.hasColumnid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.yamcs.protobuf.table.Row.Cell} returns this
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.setData = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.Row.Cell} returns this
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.clearData = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.Row.Cell.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.yamcs.protobuf.table.Row.ColumnInfo>}
 */
proto.yamcs.protobuf.table.Row.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.Row.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.Row.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.Row.ColumnInfo>} value
 * @return {!proto.yamcs.protobuf.table.Row} returns this
*/
proto.yamcs.protobuf.table.Row.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.Row.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.Row.ColumnInfo}
 */
proto.yamcs.protobuf.table.Row.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.table.Row.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.Row} returns this
 */
proto.yamcs.protobuf.table.Row.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated Cell cells = 2;
 * @return {!Array<!proto.yamcs.protobuf.table.Row.Cell>}
 */
proto.yamcs.protobuf.table.Row.prototype.getCellsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.Row.Cell>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.Row.Cell, 2));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.Row.Cell>} value
 * @return {!proto.yamcs.protobuf.table.Row} returns this
*/
proto.yamcs.protobuf.table.Row.prototype.setCellsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.Row.Cell=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.Row.Cell}
 */
proto.yamcs.protobuf.table.Row.prototype.addCells = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.yamcs.protobuf.table.Row.Cell, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.Row} returns this
 */
proto.yamcs.protobuf.table.Row.prototype.clearCellsList = function() {
  return this.setCellsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.ReadRowsRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ReadRowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ReadRowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ReadRowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    table: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    colsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    query: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ReadRowsRequest;
  return proto.yamcs.protobuf.table.ReadRowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ReadRowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCols(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ReadRowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ReadRowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ReadRowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.setTable = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.clearTable = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.hasTable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string cols = 3;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.getColsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.setColsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.addCols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.clearColsList = function() {
  return this.setColsList([]);
};


/**
 * optional string query = 4;
 * @return {string}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.setQuery = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ReadRowsRequest} returns this
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.clearQuery = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ReadRowsRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.WriteRowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.WriteRowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.WriteRowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    table: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    row: (f = msg.getRow()) && proto.yamcs.protobuf.table.Row.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.WriteRowsRequest;
  return proto.yamcs.protobuf.table.WriteRowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.WriteRowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.table.Row;
      reader.readMessage(value,proto.yamcs.protobuf.table.Row.deserializeBinaryFromReader);
      msg.setRow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.WriteRowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.WriteRowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.WriteRowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRow();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yamcs.protobuf.table.Row.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest} returns this
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest} returns this
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest} returns this
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.setTable = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest} returns this
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.clearTable = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.hasTable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Row row = 3;
 * @return {?proto.yamcs.protobuf.table.Row}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.getRow = function() {
  return /** @type{?proto.yamcs.protobuf.table.Row} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.table.Row, 3));
};


/**
 * @param {?proto.yamcs.protobuf.table.Row|undefined} value
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest} returns this
*/
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.setRow = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.table.WriteRowsRequest} returns this
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.clearRow = function() {
  return this.setRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.WriteRowsRequest.prototype.hasRow = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.WriteRowsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.WriteRowsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.WriteRowsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.WriteRowsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.WriteRowsResponse}
 */
proto.yamcs.protobuf.table.WriteRowsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.WriteRowsResponse;
  return proto.yamcs.protobuf.table.WriteRowsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.WriteRowsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.WriteRowsResponse}
 */
proto.yamcs.protobuf.table.WriteRowsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.WriteRowsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.WriteRowsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.WriteRowsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.WriteRowsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 count = 1;
 * @return {number}
 */
proto.yamcs.protobuf.table.WriteRowsResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.WriteRowsResponse} returns this
 */
proto.yamcs.protobuf.table.WriteRowsResponse.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.WriteRowsResponse} returns this
 */
proto.yamcs.protobuf.table.WriteRowsResponse.prototype.clearCount = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.WriteRowsResponse.prototype.hasCount = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.WriteRowsExceptionDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.WriteRowsExceptionDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.WriteRowsExceptionDetail}
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.WriteRowsExceptionDetail;
  return proto.yamcs.protobuf.table.WriteRowsExceptionDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.WriteRowsExceptionDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.WriteRowsExceptionDetail}
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.WriteRowsExceptionDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.WriteRowsExceptionDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 count = 1;
 * @return {number}
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.WriteRowsExceptionDetail} returns this
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.WriteRowsExceptionDetail} returns this
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.prototype.clearCount = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.WriteRowsExceptionDetail.prototype.hasCount = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.ListValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ListValue.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ListValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ListValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    yamcs_protobuf_yamcs_pb.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ListValue}
 */
proto.yamcs.protobuf.table.ListValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ListValue;
  return proto.yamcs.protobuf.table.ListValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ListValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ListValue}
 */
proto.yamcs.protobuf.table.ListValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new yamcs_protobuf_yamcs_pb.Value;
      reader.readMessage(value,yamcs_protobuf_yamcs_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ListValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ListValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ListValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      yamcs_protobuf_yamcs_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated yamcs.protobuf.Value values = 1;
 * @return {!Array<!proto.yamcs.protobuf.Value>}
 */
proto.yamcs.protobuf.table.ListValue.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, yamcs_protobuf_yamcs_pb.Value, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.Value>} value
 * @return {!proto.yamcs.protobuf.table.ListValue} returns this
*/
proto.yamcs.protobuf.table.ListValue.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.Value}
 */
proto.yamcs.protobuf.table.ListValue.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.ListValue} returns this
 */
proto.yamcs.protobuf.table.ListValue.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ExecuteSqlRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ExecuteSqlRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    statement: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ExecuteSqlRequest}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ExecuteSqlRequest;
  return proto.yamcs.protobuf.table.ExecuteSqlRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ExecuteSqlRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ExecuteSqlRequest}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ExecuteSqlRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ExecuteSqlRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ExecuteSqlRequest} returns this
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ExecuteSqlRequest} returns this
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string statement = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.getStatement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ExecuteSqlRequest} returns this
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.setStatement = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ExecuteSqlRequest} returns this
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.clearStatement = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ExecuteSqlRequest.prototype.hasStatement = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.ResultSet.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ResultSet.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ResultSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ResultSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ResultSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.yamcs.protobuf.table.ColumnInfo.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.yamcs.protobuf.table.ListValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ResultSet}
 */
proto.yamcs.protobuf.table.ResultSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ResultSet;
  return proto.yamcs.protobuf.table.ResultSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ResultSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ResultSet}
 */
proto.yamcs.protobuf.table.ResultSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.table.ColumnInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.yamcs.protobuf.table.ListValue;
      reader.readMessage(value,proto.yamcs.protobuf.table.ListValue.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ResultSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ResultSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ResultSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ResultSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.table.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.yamcs.protobuf.table.ListValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ColumnInfo columns = 1;
 * @return {!Array<!proto.yamcs.protobuf.table.ColumnInfo>}
 */
proto.yamcs.protobuf.table.ResultSet.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ColumnInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ColumnInfo>} value
 * @return {!proto.yamcs.protobuf.table.ResultSet} returns this
*/
proto.yamcs.protobuf.table.ResultSet.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ColumnInfo}
 */
proto.yamcs.protobuf.table.ResultSet.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.table.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.ResultSet} returns this
 */
proto.yamcs.protobuf.table.ResultSet.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated ListValue rows = 2;
 * @return {!Array<!proto.yamcs.protobuf.table.ListValue>}
 */
proto.yamcs.protobuf.table.ResultSet.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ListValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ListValue, 2));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ListValue>} value
 * @return {!proto.yamcs.protobuf.table.ResultSet} returns this
*/
proto.yamcs.protobuf.table.ResultSet.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ListValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ListValue}
 */
proto.yamcs.protobuf.table.ResultSet.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.yamcs.protobuf.table.ListValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.ResultSet} returns this
 */
proto.yamcs.protobuf.table.ResultSet.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ListTablesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ListTablesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ListTablesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListTablesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ListTablesRequest}
 */
proto.yamcs.protobuf.table.ListTablesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ListTablesRequest;
  return proto.yamcs.protobuf.table.ListTablesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ListTablesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ListTablesRequest}
 */
proto.yamcs.protobuf.table.ListTablesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ListTablesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ListTablesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ListTablesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListTablesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.ListTablesRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ListTablesRequest} returns this
 */
proto.yamcs.protobuf.table.ListTablesRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ListTablesRequest} returns this
 */
proto.yamcs.protobuf.table.ListTablesRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ListTablesRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.ListTablesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ListTablesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ListTablesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ListTablesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListTablesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tablesList: jspb.Message.toObjectList(msg.getTablesList(),
    proto.yamcs.protobuf.table.TableInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ListTablesResponse}
 */
proto.yamcs.protobuf.table.ListTablesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ListTablesResponse;
  return proto.yamcs.protobuf.table.ListTablesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ListTablesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ListTablesResponse}
 */
proto.yamcs.protobuf.table.ListTablesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.table.TableInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.TableInfo.deserializeBinaryFromReader);
      msg.addTables(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ListTablesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ListTablesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ListTablesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListTablesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.table.TableInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TableInfo tables = 1;
 * @return {!Array<!proto.yamcs.protobuf.table.TableInfo>}
 */
proto.yamcs.protobuf.table.ListTablesResponse.prototype.getTablesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.TableInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.TableInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.TableInfo>} value
 * @return {!proto.yamcs.protobuf.table.ListTablesResponse} returns this
*/
proto.yamcs.protobuf.table.ListTablesResponse.prototype.setTablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.TableInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.TableInfo}
 */
proto.yamcs.protobuf.table.ListTablesResponse.prototype.addTables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.table.TableInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.ListTablesResponse} returns this
 */
proto.yamcs.protobuf.table.ListTablesResponse.prototype.clearTablesList = function() {
  return this.setTablesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.GetTableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.GetTableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.GetTableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.GetTableRequest}
 */
proto.yamcs.protobuf.table.GetTableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.GetTableRequest;
  return proto.yamcs.protobuf.table.GetTableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.GetTableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.GetTableRequest}
 */
proto.yamcs.protobuf.table.GetTableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.GetTableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.GetTableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.GetTableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.GetTableRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetTableRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.GetTableRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetTableRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetTableRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.GetTableDataRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.GetTableDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.GetTableDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.GetTableDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    colsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    pos: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    limit: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    order: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.GetTableDataRequest;
  return proto.yamcs.protobuf.table.GetTableDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.GetTableDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCols(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPos(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.GetTableDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.GetTableDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.GetTableDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string cols = 3;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.getColsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.setColsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.addCols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.clearColsList = function() {
  return this.setColsList([]);
};


/**
 * optional int64 pos = 4;
 * @return {number}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.getPos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.setPos = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.clearPos = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.hasPos = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 limit = 5;
 * @return {number}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string order = 6;
 * @return {string}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.getOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.setOrder = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetTableDataRequest} returns this
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.clearOrder = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetTableDataRequest.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ListStreamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ListStreamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ListStreamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListStreamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ListStreamsRequest}
 */
proto.yamcs.protobuf.table.ListStreamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ListStreamsRequest;
  return proto.yamcs.protobuf.table.ListStreamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ListStreamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ListStreamsRequest}
 */
proto.yamcs.protobuf.table.ListStreamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ListStreamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ListStreamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ListStreamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListStreamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.ListStreamsRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ListStreamsRequest} returns this
 */
proto.yamcs.protobuf.table.ListStreamsRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ListStreamsRequest} returns this
 */
proto.yamcs.protobuf.table.ListStreamsRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ListStreamsRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.ListStreamsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ListStreamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ListStreamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ListStreamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListStreamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamsList: jspb.Message.toObjectList(msg.getStreamsList(),
    proto.yamcs.protobuf.table.StreamInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ListStreamsResponse}
 */
proto.yamcs.protobuf.table.ListStreamsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ListStreamsResponse;
  return proto.yamcs.protobuf.table.ListStreamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ListStreamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ListStreamsResponse}
 */
proto.yamcs.protobuf.table.ListStreamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.table.StreamInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.StreamInfo.deserializeBinaryFromReader);
      msg.addStreams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ListStreamsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ListStreamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ListStreamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ListStreamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.table.StreamInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated StreamInfo streams = 1;
 * @return {!Array<!proto.yamcs.protobuf.table.StreamInfo>}
 */
proto.yamcs.protobuf.table.ListStreamsResponse.prototype.getStreamsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.StreamInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.StreamInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.StreamInfo>} value
 * @return {!proto.yamcs.protobuf.table.ListStreamsResponse} returns this
*/
proto.yamcs.protobuf.table.ListStreamsResponse.prototype.setStreamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.StreamInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.StreamInfo}
 */
proto.yamcs.protobuf.table.ListStreamsResponse.prototype.addStreams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.table.StreamInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.ListStreamsResponse} returns this
 */
proto.yamcs.protobuf.table.ListStreamsResponse.prototype.clearStreamsList = function() {
  return this.setStreamsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.GetStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.GetStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.GetStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.GetStreamRequest}
 */
proto.yamcs.protobuf.table.GetStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.GetStreamRequest;
  return proto.yamcs.protobuf.table.GetStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.GetStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.GetStreamRequest}
 */
proto.yamcs.protobuf.table.GetStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.GetStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.GetStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.GetStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.GetStreamRequest} returns this
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetStreamRequest} returns this
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.GetStreamRequest} returns this
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.GetStreamRequest} returns this
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.GetStreamRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.SubscribeStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.SubscribeStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    stream: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamRequest}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.SubscribeStreamRequest;
  return proto.yamcs.protobuf.table.SubscribeStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.SubscribeStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamRequest}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.SubscribeStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.SubscribeStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamRequest} returns this
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamRequest} returns this
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string stream = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.getStream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamRequest} returns this
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.setStream = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamRequest} returns this
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.clearStream = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.SubscribeStreamRequest.prototype.hasStream = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ColumnData.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ColumnData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ColumnData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ColumnData.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = msg.getValue()) && yamcs_protobuf_yamcs_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ColumnData}
 */
proto.yamcs.protobuf.table.ColumnData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ColumnData;
  return proto.yamcs.protobuf.table.ColumnData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ColumnData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ColumnData}
 */
proto.yamcs.protobuf.table.ColumnData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new yamcs_protobuf_yamcs_pb.Value;
      reader.readMessage(value,yamcs_protobuf_yamcs_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ColumnData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ColumnData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ColumnData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ColumnData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      yamcs_protobuf_yamcs_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.ColumnData.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ColumnData} returns this
 */
proto.yamcs.protobuf.table.ColumnData.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ColumnData} returns this
 */
proto.yamcs.protobuf.table.ColumnData.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ColumnData.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional yamcs.protobuf.Value value = 2;
 * @return {?proto.yamcs.protobuf.Value}
 */
proto.yamcs.protobuf.table.ColumnData.prototype.getValue = function() {
  return /** @type{?proto.yamcs.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, yamcs_protobuf_yamcs_pb.Value, 2));
};


/**
 * @param {?proto.yamcs.protobuf.Value|undefined} value
 * @return {!proto.yamcs.protobuf.table.ColumnData} returns this
*/
proto.yamcs.protobuf.table.ColumnData.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ColumnData} returns this
 */
proto.yamcs.protobuf.table.ColumnData.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ColumnData.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.StreamData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.StreamData.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.StreamData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.StreamData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.StreamData.toObject = function(includeInstance, msg) {
  var f, obj = {
    stream: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    columnList: jspb.Message.toObjectList(msg.getColumnList(),
    proto.yamcs.protobuf.table.ColumnData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.StreamData}
 */
proto.yamcs.protobuf.table.StreamData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.StreamData;
  return proto.yamcs.protobuf.table.StreamData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.StreamData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.StreamData}
 */
proto.yamcs.protobuf.table.StreamData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStream(value);
      break;
    case 2:
      var value = new proto.yamcs.protobuf.table.ColumnData;
      reader.readMessage(value,proto.yamcs.protobuf.table.ColumnData.deserializeBinaryFromReader);
      msg.addColumn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.StreamData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.StreamData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.StreamData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.StreamData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.yamcs.protobuf.table.ColumnData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stream = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.StreamData.prototype.getStream = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.StreamData} returns this
 */
proto.yamcs.protobuf.table.StreamData.prototype.setStream = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.StreamData} returns this
 */
proto.yamcs.protobuf.table.StreamData.prototype.clearStream = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.StreamData.prototype.hasStream = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ColumnData column = 2;
 * @return {!Array<!proto.yamcs.protobuf.table.ColumnData>}
 */
proto.yamcs.protobuf.table.StreamData.prototype.getColumnList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ColumnData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ColumnData, 2));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ColumnData>} value
 * @return {!proto.yamcs.protobuf.table.StreamData} returns this
*/
proto.yamcs.protobuf.table.StreamData.prototype.setColumnList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ColumnData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ColumnData}
 */
proto.yamcs.protobuf.table.StreamData.prototype.addColumn = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.yamcs.protobuf.table.ColumnData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.StreamData} returns this
 */
proto.yamcs.protobuf.table.StreamData.prototype.clearColumnList = function() {
  return this.setColumnList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest}
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest;
  return proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest}
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest} returns this
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest} returns this
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.SubscribeStreamStatisticsRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.TableData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.TableData.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.TableData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.TableData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.TableData.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordList: jspb.Message.toObjectList(msg.getRecordList(),
    proto.yamcs.protobuf.table.TableData.TableRecord.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.TableData}
 */
proto.yamcs.protobuf.table.TableData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.TableData;
  return proto.yamcs.protobuf.table.TableData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.TableData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.TableData}
 */
proto.yamcs.protobuf.table.TableData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.table.TableData.TableRecord;
      reader.readMessage(value,proto.yamcs.protobuf.table.TableData.TableRecord.deserializeBinaryFromReader);
      msg.addRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.TableData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.TableData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.TableData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.TableData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.table.TableData.TableRecord.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.TableData.TableRecord.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.TableData.TableRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.TableData.TableRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.TableData.TableRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.TableData.TableRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnList: jspb.Message.toObjectList(msg.getColumnList(),
    proto.yamcs.protobuf.table.ColumnData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.TableData.TableRecord}
 */
proto.yamcs.protobuf.table.TableData.TableRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.TableData.TableRecord;
  return proto.yamcs.protobuf.table.TableData.TableRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.TableData.TableRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.TableData.TableRecord}
 */
proto.yamcs.protobuf.table.TableData.TableRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.table.ColumnData;
      reader.readMessage(value,proto.yamcs.protobuf.table.ColumnData.deserializeBinaryFromReader);
      msg.addColumn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.TableData.TableRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.TableData.TableRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.TableData.TableRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.TableData.TableRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.yamcs.protobuf.table.ColumnData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ColumnData column = 1;
 * @return {!Array<!proto.yamcs.protobuf.table.ColumnData>}
 */
proto.yamcs.protobuf.table.TableData.TableRecord.prototype.getColumnList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ColumnData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ColumnData, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ColumnData>} value
 * @return {!proto.yamcs.protobuf.table.TableData.TableRecord} returns this
*/
proto.yamcs.protobuf.table.TableData.TableRecord.prototype.setColumnList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ColumnData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ColumnData}
 */
proto.yamcs.protobuf.table.TableData.TableRecord.prototype.addColumn = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.table.ColumnData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.TableData.TableRecord} returns this
 */
proto.yamcs.protobuf.table.TableData.TableRecord.prototype.clearColumnList = function() {
  return this.setColumnList([]);
};


/**
 * repeated TableRecord record = 1;
 * @return {!Array<!proto.yamcs.protobuf.table.TableData.TableRecord>}
 */
proto.yamcs.protobuf.table.TableData.prototype.getRecordList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.TableData.TableRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.TableData.TableRecord, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.TableData.TableRecord>} value
 * @return {!proto.yamcs.protobuf.table.TableData} returns this
*/
proto.yamcs.protobuf.table.TableData.prototype.setRecordList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.TableData.TableRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.TableData.TableRecord}
 */
proto.yamcs.protobuf.table.TableData.prototype.addRecord = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.table.TableData.TableRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.TableData} returns this
 */
proto.yamcs.protobuf.table.TableData.prototype.clearRecordList = function() {
  return this.setRecordList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.ColumnInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.ColumnInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.ColumnInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ColumnInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    enumvalueList: jspb.Message.toObjectList(msg.getEnumvalueList(),
    proto.yamcs.protobuf.table.EnumValue.toObject, includeInstance),
    autoincrement: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.ColumnInfo}
 */
proto.yamcs.protobuf.table.ColumnInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.ColumnInfo;
  return proto.yamcs.protobuf.table.ColumnInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.ColumnInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.ColumnInfo}
 */
proto.yamcs.protobuf.table.ColumnInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.table.EnumValue;
      reader.readMessage(value,proto.yamcs.protobuf.table.EnumValue.deserializeBinaryFromReader);
      msg.addEnumvalue(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoincrement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.ColumnInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.ColumnInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.ColumnInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnumvalueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.yamcs.protobuf.table.EnumValue.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated EnumValue enumValue = 3;
 * @return {!Array<!proto.yamcs.protobuf.table.EnumValue>}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.getEnumvalueList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.EnumValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.EnumValue, 3));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.EnumValue>} value
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
*/
proto.yamcs.protobuf.table.ColumnInfo.prototype.setEnumvalueList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.EnumValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.EnumValue}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.addEnumvalue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.yamcs.protobuf.table.EnumValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.clearEnumvalueList = function() {
  return this.setEnumvalueList([]);
};


/**
 * optional bool autoIncrement = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.getAutoincrement = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.setAutoincrement = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.ColumnInfo} returns this
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.clearAutoincrement = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.ColumnInfo.prototype.hasAutoincrement = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.EnumValue.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.EnumValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.EnumValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.EnumValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    label: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.EnumValue}
 */
proto.yamcs.protobuf.table.EnumValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.EnumValue;
  return proto.yamcs.protobuf.table.EnumValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.EnumValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.EnumValue}
 */
proto.yamcs.protobuf.table.EnumValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.EnumValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.EnumValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.EnumValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.EnumValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 value = 1;
 * @return {number}
 */
proto.yamcs.protobuf.table.EnumValue.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.EnumValue} returns this
 */
proto.yamcs.protobuf.table.EnumValue.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.EnumValue} returns this
 */
proto.yamcs.protobuf.table.EnumValue.prototype.clearValue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.EnumValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.EnumValue.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.EnumValue} returns this
 */
proto.yamcs.protobuf.table.EnumValue.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.EnumValue} returns this
 */
proto.yamcs.protobuf.table.EnumValue.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.EnumValue.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.TableInfo.repeatedFields_ = [2,3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.TableInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.TableInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.TableInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    keycolumnList: jspb.Message.toObjectList(msg.getKeycolumnList(),
    proto.yamcs.protobuf.table.ColumnInfo.toObject, includeInstance),
    valuecolumnList: jspb.Message.toObjectList(msg.getValuecolumnList(),
    proto.yamcs.protobuf.table.ColumnInfo.toObject, includeInstance),
    script: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    histogramcolumnList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    storageengine: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    formatversion: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    tablespace: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    compressed: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    partitioninginfo: (f = msg.getPartitioninginfo()) && proto.yamcs.protobuf.table.PartitioningInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.TableInfo}
 */
proto.yamcs.protobuf.table.TableInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.TableInfo;
  return proto.yamcs.protobuf.table.TableInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.TableInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.TableInfo}
 */
proto.yamcs.protobuf.table.TableInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.yamcs.protobuf.table.ColumnInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.ColumnInfo.deserializeBinaryFromReader);
      msg.addKeycolumn(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.table.ColumnInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.ColumnInfo.deserializeBinaryFromReader);
      msg.addValuecolumn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScript(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addHistogramcolumn(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageengine(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFormatversion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTablespace(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompressed(value);
      break;
    case 10:
      var value = new proto.yamcs.protobuf.table.PartitioningInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.PartitioningInfo.deserializeBinaryFromReader);
      msg.setPartitioninginfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.TableInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.TableInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.TableInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeycolumnList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.yamcs.protobuf.table.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getValuecolumnList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.yamcs.protobuf.table.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHistogramcolumnList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPartitioninginfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.yamcs.protobuf.table.PartitioningInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ColumnInfo keyColumn = 2;
 * @return {!Array<!proto.yamcs.protobuf.table.ColumnInfo>}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getKeycolumnList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ColumnInfo, 2));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ColumnInfo>} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
*/
proto.yamcs.protobuf.table.TableInfo.prototype.setKeycolumnList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ColumnInfo}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.addKeycolumn = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.yamcs.protobuf.table.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearKeycolumnList = function() {
  return this.setKeycolumnList([]);
};


/**
 * repeated ColumnInfo valueColumn = 3;
 * @return {!Array<!proto.yamcs.protobuf.table.ColumnInfo>}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getValuecolumnList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ColumnInfo, 3));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ColumnInfo>} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
*/
proto.yamcs.protobuf.table.TableInfo.prototype.setValuecolumnList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ColumnInfo}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.addValuecolumn = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.yamcs.protobuf.table.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearValuecolumnList = function() {
  return this.setValuecolumnList([]);
};


/**
 * optional string script = 4;
 * @return {string}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.setScript = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearScript = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.hasScript = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string histogramColumn = 5;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getHistogramcolumnList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.setHistogramcolumnList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.addHistogramcolumn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearHistogramcolumnList = function() {
  return this.setHistogramcolumnList([]);
};


/**
 * optional string storageEngine = 6;
 * @return {string}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getStorageengine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.setStorageengine = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearStorageengine = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.hasStorageengine = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 formatVersion = 7;
 * @return {number}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getFormatversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.setFormatversion = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearFormatversion = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.hasFormatversion = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string tablespace = 8;
 * @return {string}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getTablespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.setTablespace = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearTablespace = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.hasTablespace = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool compressed = 9;
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getCompressed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.setCompressed = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearCompressed = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.hasCompressed = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PartitioningInfo partitioningInfo = 10;
 * @return {?proto.yamcs.protobuf.table.PartitioningInfo}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.getPartitioninginfo = function() {
  return /** @type{?proto.yamcs.protobuf.table.PartitioningInfo} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.table.PartitioningInfo, 10));
};


/**
 * @param {?proto.yamcs.protobuf.table.PartitioningInfo|undefined} value
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
*/
proto.yamcs.protobuf.table.TableInfo.prototype.setPartitioninginfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.table.TableInfo} returns this
 */
proto.yamcs.protobuf.table.TableInfo.prototype.clearPartitioninginfo = function() {
  return this.setPartitioninginfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.TableInfo.prototype.hasPartitioninginfo = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.PartitioningInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.PartitioningInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.PartitioningInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timecolumn: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    timepartitionschema: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    valuecolumn: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    valuecolumntype: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo}
 */
proto.yamcs.protobuf.table.PartitioningInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.PartitioningInfo;
  return proto.yamcs.protobuf.table.PartitioningInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.PartitioningInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo}
 */
proto.yamcs.protobuf.table.PartitioningInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.yamcs.protobuf.table.PartitioningInfo.PartitioningType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimecolumn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimepartitionschema(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuecolumn(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuecolumntype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.PartitioningInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.PartitioningInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.PartitioningInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.yamcs.protobuf.table.PartitioningInfo.PartitioningType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.yamcs.protobuf.table.PartitioningInfo.PartitioningType = {
  TIME: 1,
  VALUE: 2,
  TIME_AND_VALUE: 3
};

/**
 * optional PartitioningType type = 1;
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo.PartitioningType}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.getType = function() {
  return /** @type {!proto.yamcs.protobuf.table.PartitioningInfo.PartitioningType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.yamcs.protobuf.table.PartitioningInfo.PartitioningType} value
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string timeColumn = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.getTimecolumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.setTimecolumn = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.clearTimecolumn = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.hasTimecolumn = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string timePartitionSchema = 3;
 * @return {string}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.getTimepartitionschema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.setTimepartitionschema = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.clearTimepartitionschema = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.hasTimepartitionschema = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string valueColumn = 4;
 * @return {string}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.getValuecolumn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.setValuecolumn = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.clearValuecolumn = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.hasValuecolumn = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string valueColumnType = 5;
 * @return {string}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.getValuecolumntype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.setValuecolumntype = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.PartitioningInfo} returns this
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.clearValuecolumntype = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.PartitioningInfo.prototype.hasValuecolumntype = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.table.StreamInfo.repeatedFields_ = [2,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.StreamInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.StreamInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.StreamInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    columnList: jspb.Message.toObjectList(msg.getColumnList(),
    proto.yamcs.protobuf.table.ColumnInfo.toObject, includeInstance),
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.yamcs.protobuf.table.ColumnInfo.toObject, includeInstance),
    script: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    datacount: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    subscribersList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.StreamInfo}
 */
proto.yamcs.protobuf.table.StreamInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.StreamInfo;
  return proto.yamcs.protobuf.table.StreamInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.StreamInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.StreamInfo}
 */
proto.yamcs.protobuf.table.StreamInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.yamcs.protobuf.table.ColumnInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumn(value);
      break;
    case 5:
      var value = new proto.yamcs.protobuf.table.ColumnInfo;
      reader.readMessage(value,proto.yamcs.protobuf.table.ColumnInfo.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScript(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatacount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubscribers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.StreamInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.StreamInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.StreamInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.yamcs.protobuf.table.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.yamcs.protobuf.table.ColumnInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSubscribersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ColumnInfo column = 2;
 * @return {!Array<!proto.yamcs.protobuf.table.ColumnInfo>}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.getColumnList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ColumnInfo, 2));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ColumnInfo>} value
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
*/
proto.yamcs.protobuf.table.StreamInfo.prototype.setColumnList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ColumnInfo}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.addColumn = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.yamcs.protobuf.table.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.clearColumnList = function() {
  return this.setColumnList([]);
};


/**
 * repeated ColumnInfo columns = 5;
 * @return {!Array<!proto.yamcs.protobuf.table.ColumnInfo>}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.table.ColumnInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.table.ColumnInfo, 5));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.table.ColumnInfo>} value
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
*/
proto.yamcs.protobuf.table.StreamInfo.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.yamcs.protobuf.table.ColumnInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.ColumnInfo}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.yamcs.protobuf.table.ColumnInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * optional string script = 3;
 * @return {string}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.getScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.setScript = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.clearScript = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.hasScript = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 dataCount = 4;
 * @return {number}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.getDatacount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.setDatacount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.clearDatacount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.hasDatacount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string subscribers = 6;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.getSubscribersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.setSubscribersList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.addSubscribers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.table.StreamInfo} returns this
 */
proto.yamcs.protobuf.table.StreamInfo.prototype.clearSubscribersList = function() {
  return this.setSubscribersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.RebuildHistogramRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.RebuildHistogramRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    table: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    start: (f = msg.getStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    stop: (f = msg.getStop()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.RebuildHistogramRequest;
  return proto.yamcs.protobuf.table.RebuildHistogramRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.RebuildHistogramRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.RebuildHistogramRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.RebuildHistogramRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStop();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.setTable = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.clearTable = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.hasTable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp start = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
*/
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp stop = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.getStop = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
*/
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.setStop = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramRequest} returns this
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.clearStop = function() {
  return this.setStop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.table.RebuildHistogramRequest.prototype.hasStop = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.table.RebuildHistogramResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.table.RebuildHistogramResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.table.RebuildHistogramResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.RebuildHistogramResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramResponse}
 */
proto.yamcs.protobuf.table.RebuildHistogramResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.table.RebuildHistogramResponse;
  return proto.yamcs.protobuf.table.RebuildHistogramResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.table.RebuildHistogramResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.table.RebuildHistogramResponse}
 */
proto.yamcs.protobuf.table.RebuildHistogramResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.table.RebuildHistogramResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.table.RebuildHistogramResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.table.RebuildHistogramResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.table.RebuildHistogramResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.yamcs.protobuf.table);
