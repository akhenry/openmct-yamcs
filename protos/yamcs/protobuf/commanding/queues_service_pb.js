// source: yamcs/protobuf/commanding/queues_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var yamcs_api_annotations_pb = require('../../../yamcs/api/annotations_pb.js');
goog.object.extend(proto, yamcs_api_annotations_pb);
var yamcs_protobuf_commanding_commanding_pb = require('../../../yamcs/protobuf/commanding/commanding_pb.js');
goog.object.extend(proto, yamcs_protobuf_commanding_commanding_pb);
goog.exportSymbol('proto.yamcs.protobuf.commanding.AcceptCommandRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.BlockQueueRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.DisableQueueRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.EnableQueueRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.GetQueueRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.ListQueuesRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.ListQueuesResponse', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.RejectCommandRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.ListQueuesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.ListQueuesRequest.displayName = 'proto.yamcs.protobuf.commanding.ListQueuesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.commanding.ListQueuesResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.ListQueuesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.ListQueuesResponse.displayName = 'proto.yamcs.protobuf.commanding.ListQueuesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.displayName = 'proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.displayName = 'proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.GetQueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.GetQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.GetQueueRequest.displayName = 'proto.yamcs.protobuf.commanding.GetQueueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.EnableQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.EnableQueueRequest.displayName = 'proto.yamcs.protobuf.commanding.EnableQueueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.DisableQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.DisableQueueRequest.displayName = 'proto.yamcs.protobuf.commanding.DisableQueueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.BlockQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.BlockQueueRequest.displayName = 'proto.yamcs.protobuf.commanding.BlockQueueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.displayName = 'proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.displayName = 'proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.AcceptCommandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.AcceptCommandRequest.displayName = 'proto.yamcs.protobuf.commanding.AcceptCommandRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.RejectCommandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.RejectCommandRequest.displayName = 'proto.yamcs.protobuf.commanding.RejectCommandRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.ListQueuesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.ListQueuesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesRequest}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.ListQueuesRequest;
  return proto.yamcs.protobuf.commanding.ListQueuesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesRequest}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.ListQueuesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.ListQueuesRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.ListQueuesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.ListQueuesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    queuesList: jspb.Message.toObjectList(msg.getQueuesList(),
    yamcs_protobuf_commanding_commanding_pb.CommandQueueInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesResponse}
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.ListQueuesResponse;
  return proto.yamcs.protobuf.commanding.ListQueuesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesResponse}
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new yamcs_protobuf_commanding_commanding_pb.CommandQueueInfo;
      reader.readMessage(value,yamcs_protobuf_commanding_commanding_pb.CommandQueueInfo.deserializeBinaryFromReader);
      msg.addQueues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.ListQueuesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      yamcs_protobuf_commanding_commanding_pb.CommandQueueInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CommandQueueInfo queues = 1;
 * @return {!Array<!proto.yamcs.protobuf.commanding.CommandQueueInfo>}
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.prototype.getQueuesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.commanding.CommandQueueInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, yamcs_protobuf_commanding_commanding_pb.CommandQueueInfo, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.commanding.CommandQueueInfo>} value
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesResponse} returns this
*/
proto.yamcs.protobuf.commanding.ListQueuesResponse.prototype.setQueuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo}
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.prototype.addQueues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.commanding.CommandQueueInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuesResponse} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuesResponse.prototype.clearQueuesList = function() {
  return this.setQueuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest;
  return proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueStatisticsRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest;
  return proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest} returns this
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.SubscribeQueueEventsRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.GetQueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.GetQueueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.GetQueueRequest;
  return proto.yamcs.protobuf.commanding.GetQueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.GetQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.GetQueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.GetQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queue = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.setQueue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.GetQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.clearQueue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.GetQueueRequest.prototype.hasQueue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.EnableQueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.EnableQueueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.EnableQueueRequest;
  return proto.yamcs.protobuf.commanding.EnableQueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.EnableQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.EnableQueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.EnableQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queue = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.setQueue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.EnableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.clearQueue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.EnableQueueRequest.prototype.hasQueue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.DisableQueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.DisableQueueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.DisableQueueRequest;
  return proto.yamcs.protobuf.commanding.DisableQueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.DisableQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.DisableQueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.DisableQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queue = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.setQueue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.DisableQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.clearQueue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.DisableQueueRequest.prototype.hasQueue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.BlockQueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.BlockQueueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.BlockQueueRequest;
  return proto.yamcs.protobuf.commanding.BlockQueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.BlockQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.BlockQueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.BlockQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queue = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.setQueue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.BlockQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.clearQueue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.BlockQueueRequest.prototype.hasQueue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest;
  return proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queue = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.setQueue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.clearQueue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsRequest.prototype.hasQueue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandsList: jspb.Message.toObjectList(msg.getCommandsList(),
    yamcs_protobuf_commanding_commanding_pb.CommandQueueEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse;
  return proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new yamcs_protobuf_commanding_commanding_pb.CommandQueueEntry;
      reader.readMessage(value,yamcs_protobuf_commanding_commanding_pb.CommandQueueEntry.deserializeBinaryFromReader);
      msg.addCommands(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      yamcs_protobuf_commanding_commanding_pb.CommandQueueEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CommandQueueEntry commands = 1;
 * @return {!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.prototype.getCommandsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, yamcs_protobuf_commanding_commanding_pb.CommandQueueEntry, 1));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>} value
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse} returns this
*/
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.prototype.setCommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry}
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.prototype.addCommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yamcs.protobuf.commanding.CommandQueueEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse} returns this
 */
proto.yamcs.protobuf.commanding.ListQueuedCommandsResponse.prototype.clearCommandsList = function() {
  return this.setCommandsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.AcceptCommandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    command: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.AcceptCommandRequest;
  return proto.yamcs.protobuf.commanding.AcceptCommandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.AcceptCommandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queue = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.setQueue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.clearQueue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.hasQueue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string command = 4;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.setCommand = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.AcceptCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.clearCommand = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.AcceptCommandRequest.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.RejectCommandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.RejectCommandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queue: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    command: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.RejectCommandRequest;
  return proto.yamcs.protobuf.commanding.RejectCommandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.RejectCommandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.RejectCommandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.RejectCommandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processor = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.getProcessor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.setProcessor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.clearProcessor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.hasProcessor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queue = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.setQueue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.clearQueue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.hasQueue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string command = 4;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.setCommand = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.RejectCommandRequest} returns this
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.clearCommand = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.RejectCommandRequest.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.yamcs.protobuf.commanding);
