// source: yamcs/protobuf/commanding/commanding.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var yamcs_protobuf_yamcs_pb = require('../../../yamcs/protobuf/yamcs_pb.js');
goog.object.extend(proto, yamcs_protobuf_yamcs_pb);
var yamcs_protobuf_mdb_mdb_pb = require('../../../yamcs/protobuf/mdb/mdb_pb.js');
goog.object.extend(proto, yamcs_protobuf_mdb_mdb_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandAssignment', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandHistoryAttribute', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandHistoryEntry', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandId', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandQueueEntry', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandQueueEvent', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandQueueEvent.Type', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandQueueInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandQueueRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.CommandSignificance', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.QueueState', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.VerifierConfig', null, global);
goog.exportSymbol('proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandId.displayName = 'proto.yamcs.protobuf.commanding.CommandId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.commanding.CommandQueueInfo.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandQueueInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandQueueInfo.displayName = 'proto.yamcs.protobuf.commanding.CommandQueueInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.commanding.CommandQueueEntry.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandQueueEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandQueueEntry.displayName = 'proto.yamcs.protobuf.commanding.CommandQueueEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandQueueEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandQueueEvent.displayName = 'proto.yamcs.protobuf.commanding.CommandQueueEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandQueueRequest.displayName = 'proto.yamcs.protobuf.commanding.CommandQueueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandSignificance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandSignificance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandSignificance.displayName = 'proto.yamcs.protobuf.commanding.CommandSignificance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.VerifierConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.VerifierConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.VerifierConfig.displayName = 'proto.yamcs.protobuf.commanding.VerifierConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.displayName = 'proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandHistoryAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandHistoryAttribute.displayName = 'proto.yamcs.protobuf.commanding.CommandHistoryAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandAssignment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandAssignment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandAssignment.displayName = 'proto.yamcs.protobuf.commanding.CommandAssignment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yamcs.protobuf.commanding.CommandHistoryEntry.repeatedFields_, null);
};
goog.inherits(proto.yamcs.protobuf.commanding.CommandHistoryEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.commanding.CommandHistoryEntry.displayName = 'proto.yamcs.protobuf.commanding.CommandHistoryEntry';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandId.toObject = function(includeInstance, msg) {
  var f, obj = {
    generationtime: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    origin: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    sequencenumber: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    commandname: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandId}
 */
proto.yamcs.protobuf.commanding.CommandId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandId;
  return proto.yamcs.protobuf.commanding.CommandId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandId}
 */
proto.yamcs.protobuf.commanding.CommandId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGenerationtime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequencenumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommandname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * required int64 generationTime = 1;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.getGenerationtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.setGenerationtime = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.clearGenerationtime = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.hasGenerationtime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string origin = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.setOrigin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.clearOrigin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.hasOrigin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 sequenceNumber = 3;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.getSequencenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.setSequencenumber = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.clearSequencenumber = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.hasSequencenumber = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string commandName = 4;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.getCommandname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.setCommandname = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandId} returns this
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.clearCommandname = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandId.prototype.hasCommandname = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.repeatedFields_ = [8,10,11,13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandQueueInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processorname: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    state: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    nbsentcommands: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    nbrejectedcommands: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    stateexpirationtimes: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.yamcs.protobuf.commanding.CommandQueueEntry.toObject, includeInstance),
    order: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    usersList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    groupsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    minlevel: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    tcpatternsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.yamcs.protobuf.commanding.CommandQueueEntry.toObject, includeInstance),
    acceptedcommandscount: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    rejectedcommandscount: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandQueueInfo;
  return proto.yamcs.protobuf.commanding.CommandQueueInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessorname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {!proto.yamcs.protobuf.commanding.QueueState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNbsentcommands(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNbrejectedcommands(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStateexpirationtimes(value);
      break;
    case 8:
      var value = new proto.yamcs.protobuf.commanding.CommandQueueEntry;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandQueueEntry.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrder(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroups(value);
      break;
    case 12:
      var value = /** @type {!proto.yamcs.protobuf.mdb.SignificanceInfo.SignificanceLevelType} */ (reader.readEnum());
      msg.setMinlevel(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addTcpatterns(value);
      break;
    case 14:
      var value = new proto.yamcs.protobuf.commanding.CommandQueueEntry;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandQueueEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAcceptedcommandscount(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRejectedcommandscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandQueueInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!proto.yamcs.protobuf.commanding.QueueState} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.yamcs.protobuf.commanding.CommandQueueEntry.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = /** @type {!proto.yamcs.protobuf.mdb.SignificanceInfo.SignificanceLevelType} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getTcpatternsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.yamcs.protobuf.commanding.CommandQueueEntry.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processorName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getProcessorname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setProcessorname = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearProcessorname = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasProcessorname = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional QueueState state = 4;
 * @return {!proto.yamcs.protobuf.commanding.QueueState}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getState = function() {
  return /** @type {!proto.yamcs.protobuf.commanding.QueueState} */ (jspb.Message.getFieldWithDefault(this, 4, 1));
};


/**
 * @param {!proto.yamcs.protobuf.commanding.QueueState} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setState = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearState = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 nbSentCommands = 5;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getNbsentcommands = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setNbsentcommands = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearNbsentcommands = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasNbsentcommands = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 nbRejectedCommands = 6;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getNbrejectedcommands = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setNbrejectedcommands = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearNbrejectedcommands = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasNbrejectedcommands = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 stateExpirationTimeS = 7;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getStateexpirationtimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setStateexpirationtimes = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearStateexpirationtimes = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasStateexpirationtimes = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated CommandQueueEntry entry = 8;
 * @return {!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.commanding.CommandQueueEntry, 8));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
*/
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.yamcs.protobuf.commanding.CommandQueueEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional int32 order = 9;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setOrder = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearOrder = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated string users = 10;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getUsersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setUsersList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.addUsers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * repeated string groups = 11;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getGroupsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setGroupsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.addGroups = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional yamcs.protobuf.mdb.SignificanceInfo.SignificanceLevelType minLevel = 12;
 * @return {!proto.yamcs.protobuf.mdb.SignificanceInfo.SignificanceLevelType}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getMinlevel = function() {
  return /** @type {!proto.yamcs.protobuf.mdb.SignificanceInfo.SignificanceLevelType} */ (jspb.Message.getFieldWithDefault(this, 12, 1));
};


/**
 * @param {!proto.yamcs.protobuf.mdb.SignificanceInfo.SignificanceLevelType} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setMinlevel = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearMinlevel = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasMinlevel = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated string tcPatterns = 13;
 * @return {!Array<string>}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getTcpatternsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setTcpatternsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.addTcpatterns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearTcpatternsList = function() {
  return this.setTcpatternsList([]);
};


/**
 * repeated CommandQueueEntry entries = 14;
 * @return {!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.commanding.CommandQueueEntry, 14));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.commanding.CommandQueueEntry>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
*/
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.yamcs.protobuf.commanding.CommandQueueEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};


/**
 * optional int32 acceptedCommandsCount = 15;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getAcceptedcommandscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setAcceptedcommandscount = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearAcceptedcommandscount = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasAcceptedcommandscount = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 rejectedCommandsCount = 16;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.getRejectedcommandscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.setRejectedcommandscount = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueInfo} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.clearRejectedcommandscount = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueInfo.prototype.hasRejectedcommandscount = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandQueueEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    processorname: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    queuename: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    origin: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    sequencenumber: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    commandname: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    assignmentsList: jspb.Message.toObjectList(msg.getAssignmentsList(),
    proto.yamcs.protobuf.commanding.CommandAssignment.toObject, includeInstance),
    binary: msg.getBinary_asB64(),
    username: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    comment: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    generationtime: (f = msg.getGenerationtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    pendingtransmissionconstraints: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandQueueEntry;
  return proto.yamcs.protobuf.commanding.CommandQueueEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessorname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueuename(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequencenumber(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommandname(value);
      break;
    case 18:
      var value = new proto.yamcs.protobuf.commanding.CommandAssignment;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandAssignment.deserializeBinaryFromReader);
      msg.addAssignments(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinary(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setGenerationtime(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPendingtransmissionconstraints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandQueueEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getAssignmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.yamcs.protobuf.commanding.CommandAssignment.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getGenerationtime();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string processorName = 2;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getProcessorname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setProcessorname = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearProcessorname = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasProcessorname = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string queueName = 3;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getQueuename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setQueuename = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearQueuename = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasQueuename = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string id = 14;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setId = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearId = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasId = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string origin = 15;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setOrigin = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearOrigin = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasOrigin = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 sequenceNumber = 16;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getSequencenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setSequencenumber = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearSequencenumber = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasSequencenumber = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string commandName = 17;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getCommandname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setCommandname = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearCommandname = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasCommandname = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated CommandAssignment assignments = 18;
 * @return {!Array<!proto.yamcs.protobuf.commanding.CommandAssignment>}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getAssignmentsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.commanding.CommandAssignment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.commanding.CommandAssignment, 18));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.commanding.CommandAssignment>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
*/
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setAssignmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandAssignment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.addAssignments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.yamcs.protobuf.commanding.CommandAssignment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearAssignmentsList = function() {
  return this.setAssignmentsList([]);
};


/**
 * optional bytes binary = 6;
 * @return {!(string|Uint8Array)}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getBinary = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes binary = 6;
 * This is a type-conversion wrapper around `getBinary()`
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getBinary_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinary()));
};


/**
 * optional bytes binary = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinary()`
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getBinary_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinary()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setBinary = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearBinary = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasBinary = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string username = 7;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string comment = 11;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setComment = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearComment = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasComment = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp generationTime = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getGenerationtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
*/
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setGenerationtime = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearGenerationtime = function() {
  return this.setGenerationtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasGenerationtime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool pendingTransmissionConstraints = 13;
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.getPendingtransmissionconstraints = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.setPendingtransmissionconstraints = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.clearPendingtransmissionconstraints = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEntry.prototype.hasPendingtransmissionconstraints = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandQueueEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    data: (f = msg.getData()) && proto.yamcs.protobuf.commanding.CommandQueueEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEvent}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandQueueEvent;
  return proto.yamcs.protobuf.commanding.CommandQueueEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEvent}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.yamcs.protobuf.commanding.CommandQueueEvent.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.yamcs.protobuf.commanding.CommandQueueEntry;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandQueueEntry.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandQueueEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.yamcs.protobuf.commanding.CommandQueueEvent.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yamcs.protobuf.commanding.CommandQueueEntry.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.Type = {
  COMMAND_ADDED: 1,
  COMMAND_REJECTED: 2,
  COMMAND_SENT: 3,
  COMMAND_UPDATED: 4
};

/**
 * optional Type type = 1;
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEvent.Type}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.getType = function() {
  return /** @type {!proto.yamcs.protobuf.commanding.CommandQueueEvent.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueEvent.Type} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEvent} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEvent} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CommandQueueEntry data = 2;
 * @return {?proto.yamcs.protobuf.commanding.CommandQueueEntry}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.getData = function() {
  return /** @type{?proto.yamcs.protobuf.commanding.CommandQueueEntry} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.commanding.CommandQueueEntry, 2));
};


/**
 * @param {?proto.yamcs.protobuf.commanding.CommandQueueEntry|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEvent} returns this
*/
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueEvent} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueEvent.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandQueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queueinfo: (f = msg.getQueueinfo()) && proto.yamcs.protobuf.commanding.CommandQueueInfo.toObject(includeInstance, f),
    queueentry: (f = msg.getQueueentry()) && proto.yamcs.protobuf.commanding.CommandQueueEntry.toObject(includeInstance, f),
    rebuild: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandQueueRequest;
  return proto.yamcs.protobuf.commanding.CommandQueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yamcs.protobuf.commanding.CommandQueueInfo;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandQueueInfo.deserializeBinaryFromReader);
      msg.setQueueinfo(value);
      break;
    case 2:
      var value = new proto.yamcs.protobuf.commanding.CommandQueueEntry;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandQueueEntry.deserializeBinaryFromReader);
      msg.setQueueentry(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRebuild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandQueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueueinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.yamcs.protobuf.commanding.CommandQueueInfo.serializeBinaryToWriter
    );
  }
  f = message.getQueueentry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yamcs.protobuf.commanding.CommandQueueEntry.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional CommandQueueInfo queueInfo = 1;
 * @return {?proto.yamcs.protobuf.commanding.CommandQueueInfo}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.getQueueinfo = function() {
  return /** @type{?proto.yamcs.protobuf.commanding.CommandQueueInfo} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.commanding.CommandQueueInfo, 1));
};


/**
 * @param {?proto.yamcs.protobuf.commanding.CommandQueueInfo|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest} returns this
*/
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.setQueueinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.clearQueueinfo = function() {
  return this.setQueueinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.hasQueueinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CommandQueueEntry queueEntry = 2;
 * @return {?proto.yamcs.protobuf.commanding.CommandQueueEntry}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.getQueueentry = function() {
  return /** @type{?proto.yamcs.protobuf.commanding.CommandQueueEntry} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.commanding.CommandQueueEntry, 2));
};


/**
 * @param {?proto.yamcs.protobuf.commanding.CommandQueueEntry|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest} returns this
*/
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.setQueueentry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.clearQueueentry = function() {
  return this.setQueueentry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.hasQueueentry = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool rebuild = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.getRebuild = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.setRebuild = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandQueueRequest} returns this
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.clearRebuild = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandQueueRequest.prototype.hasRebuild = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandSignificance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandSignificance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandSignificance.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequencenumber: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    significance: (f = msg.getSignificance()) && yamcs_protobuf_mdb_mdb_pb.SignificanceInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandSignificance}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandSignificance;
  return proto.yamcs.protobuf.commanding.CommandSignificance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandSignificance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandSignificance}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequencenumber(value);
      break;
    case 2:
      var value = new yamcs_protobuf_mdb_mdb_pb.SignificanceInfo;
      reader.readMessage(value,yamcs_protobuf_mdb_mdb_pb.SignificanceInfo.deserializeBinaryFromReader);
      msg.setSignificance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandSignificance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandSignificance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandSignificance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSignificance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      yamcs_protobuf_mdb_mdb_pb.SignificanceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 sequenceNumber = 1;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.getSequencenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandSignificance} returns this
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.setSequencenumber = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandSignificance} returns this
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.clearSequencenumber = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.hasSequencenumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional yamcs.protobuf.mdb.SignificanceInfo significance = 2;
 * @return {?proto.yamcs.protobuf.mdb.SignificanceInfo}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.getSignificance = function() {
  return /** @type{?proto.yamcs.protobuf.mdb.SignificanceInfo} */ (
    jspb.Message.getWrapperField(this, yamcs_protobuf_mdb_mdb_pb.SignificanceInfo, 2));
};


/**
 * @param {?proto.yamcs.protobuf.mdb.SignificanceInfo|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandSignificance} returns this
*/
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.setSignificance = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandSignificance} returns this
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.clearSignificance = function() {
  return this.setSignificance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandSignificance.prototype.hasSignificance = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.VerifierConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.VerifierConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.VerifierConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    disable: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    checkwindow: (f = msg.getCheckwindow()) && proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.VerifierConfig;
  return proto.yamcs.protobuf.commanding.VerifierConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.VerifierConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisable(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.deserializeBinaryFromReader);
      msg.setCheckwindow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.VerifierConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.VerifierConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.VerifierConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCheckwindow();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    timetostartchecking: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    timetostopchecking: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow;
  return proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetostartchecking(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetostopchecking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 timeToStartChecking = 1;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.getTimetostartchecking = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} returns this
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.setTimetostartchecking = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} returns this
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.clearTimetostartchecking = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.hasTimetostartchecking = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 timeToStopChecking = 2;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.getTimetostopchecking = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} returns this
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.setTimetostopchecking = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} returns this
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.clearTimetostopchecking = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow.prototype.hasTimetostopchecking = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool disable = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.getDisable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig} returns this
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.setDisable = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig} returns this
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.clearDisable = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.hasDisable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CheckWindow checkWindow = 3;
 * @return {?proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.getCheckwindow = function() {
  return /** @type{?proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow, 3));
};


/**
 * @param {?proto.yamcs.protobuf.commanding.VerifierConfig.CheckWindow|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig} returns this
*/
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.setCheckwindow = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.VerifierConfig} returns this
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.clearCheckwindow = function() {
  return this.setCheckwindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.VerifierConfig.prototype.hasCheckwindow = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandHistoryAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = msg.getValue()) && yamcs_protobuf_yamcs_pb.Value.toObject(includeInstance, f),
    time: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandHistoryAttribute;
  return proto.yamcs.protobuf.commanding.CommandHistoryAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new yamcs_protobuf_yamcs_pb.Value;
      reader.readMessage(value,yamcs_protobuf_yamcs_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandHistoryAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      yamcs_protobuf_yamcs_pb.Value.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional yamcs.protobuf.Value value = 2;
 * @return {?proto.yamcs.protobuf.Value}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.getValue = function() {
  return /** @type{?proto.yamcs.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, yamcs_protobuf_yamcs_pb.Value, 2));
};


/**
 * @param {?proto.yamcs.protobuf.Value|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} returns this
*/
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 time = 3;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.setTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.clearTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryAttribute.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandAssignment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandAssignment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandAssignment.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    value: (f = msg.getValue()) && yamcs_protobuf_yamcs_pb.Value.toObject(includeInstance, f),
    userinput: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandAssignment;
  return proto.yamcs.protobuf.commanding.CommandAssignment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandAssignment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new yamcs_protobuf_yamcs_pb.Value;
      reader.readMessage(value,yamcs_protobuf_yamcs_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserinput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandAssignment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandAssignment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandAssignment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      yamcs_protobuf_yamcs_pb.Value.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment} returns this
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment} returns this
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional yamcs.protobuf.Value value = 2;
 * @return {?proto.yamcs.protobuf.Value}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.getValue = function() {
  return /** @type{?proto.yamcs.protobuf.Value} */ (
    jspb.Message.getWrapperField(this, yamcs_protobuf_yamcs_pb.Value, 2));
};


/**
 * @param {?proto.yamcs.protobuf.Value|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment} returns this
*/
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment} returns this
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool userInput = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.getUserinput = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment} returns this
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.setUserinput = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment} returns this
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.clearUserinput = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandAssignment.prototype.hasUserinput = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.repeatedFields_ = [3,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.commanding.CommandHistoryEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    commandname: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    aliasesMap: (f = msg.getAliasesMap()) ? f.toObject(includeInstance, undefined) : [],
    origin: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    sequencenumber: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    commandid: (f = msg.getCommandid()) && proto.yamcs.protobuf.commanding.CommandId.toObject(includeInstance, f),
    attrList: jspb.Message.toObjectList(msg.getAttrList(),
    proto.yamcs.protobuf.commanding.CommandHistoryAttribute.toObject, includeInstance),
    generationtime: (f = msg.getGenerationtime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    assignmentsList: jspb.Message.toObjectList(msg.getAssignmentsList(),
    proto.yamcs.protobuf.commanding.CommandAssignment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.commanding.CommandHistoryEntry;
  return proto.yamcs.protobuf.commanding.CommandHistoryEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommandname(value);
      break;
    case 12:
      var value = msg.getAliasesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequencenumber(value);
      break;
    case 1:
      var value = new proto.yamcs.protobuf.commanding.CommandId;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandId.deserializeBinaryFromReader);
      msg.setCommandid(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.commanding.CommandHistoryAttribute;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandHistoryAttribute.deserializeBinaryFromReader);
      msg.addAttr(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setGenerationtime(value);
      break;
    case 11:
      var value = new proto.yamcs.protobuf.commanding.CommandAssignment;
      reader.readMessage(value,proto.yamcs.protobuf.commanding.CommandAssignment.deserializeBinaryFromReader);
      msg.addAssignments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.commanding.CommandHistoryEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAliasesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getCommandid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.yamcs.protobuf.commanding.CommandId.serializeBinaryToWriter
    );
  }
  f = message.getAttrList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.yamcs.protobuf.commanding.CommandHistoryAttribute.serializeBinaryToWriter
    );
  }
  f = message.getGenerationtime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAssignmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.yamcs.protobuf.commanding.CommandAssignment.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 7;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setId = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearId = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.hasId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string commandName = 8;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getCommandname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setCommandname = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearCommandname = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.hasCommandname = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * map<string, string> aliases = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getAliasesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearAliasesMap = function() {
  this.getAliasesMap().clear();
  return this;
};


/**
 * optional string origin = 9;
 * @return {string}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setOrigin = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearOrigin = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.hasOrigin = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 sequenceNumber = 10;
 * @return {number}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getSequencenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setSequencenumber = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearSequencenumber = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.hasSequencenumber = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional CommandId commandId = 1;
 * @return {?proto.yamcs.protobuf.commanding.CommandId}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getCommandid = function() {
  return /** @type{?proto.yamcs.protobuf.commanding.CommandId} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.commanding.CommandId, 1));
};


/**
 * @param {?proto.yamcs.protobuf.commanding.CommandId|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
*/
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setCommandid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearCommandid = function() {
  return this.setCommandid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.hasCommandid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CommandHistoryAttribute attr = 3;
 * @return {!Array<!proto.yamcs.protobuf.commanding.CommandHistoryAttribute>}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getAttrList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.commanding.CommandHistoryAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.commanding.CommandHistoryAttribute, 3));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.commanding.CommandHistoryAttribute>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
*/
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setAttrList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryAttribute}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.addAttr = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.yamcs.protobuf.commanding.CommandHistoryAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearAttrList = function() {
  return this.setAttrList([]);
};


/**
 * optional google.protobuf.Timestamp generationTime = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getGenerationtime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
*/
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setGenerationtime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearGenerationtime = function() {
  return this.setGenerationtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.hasGenerationtime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated CommandAssignment assignments = 11;
 * @return {!Array<!proto.yamcs.protobuf.commanding.CommandAssignment>}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.getAssignmentsList = function() {
  return /** @type{!Array<!proto.yamcs.protobuf.commanding.CommandAssignment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yamcs.protobuf.commanding.CommandAssignment, 11));
};


/**
 * @param {!Array<!proto.yamcs.protobuf.commanding.CommandAssignment>} value
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
*/
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.setAssignmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.yamcs.protobuf.commanding.CommandAssignment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yamcs.protobuf.commanding.CommandAssignment}
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.addAssignments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.yamcs.protobuf.commanding.CommandAssignment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yamcs.protobuf.commanding.CommandHistoryEntry} returns this
 */
proto.yamcs.protobuf.commanding.CommandHistoryEntry.prototype.clearAssignmentsList = function() {
  return this.setAssignmentsList([]);
};


/**
 * @enum {number}
 */
proto.yamcs.protobuf.commanding.QueueState = {
  BLOCKED: 1,
  DISABLED: 2,
  ENABLED: 3
};

goog.object.extend(exports, proto.yamcs.protobuf.commanding);
