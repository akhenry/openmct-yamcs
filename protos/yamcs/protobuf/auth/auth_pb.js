// source: yamcs/protobuf/auth/auth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var yamcs_protobuf_iam_iam_pb = require('../../../yamcs/protobuf/iam/iam_pb.js');
goog.object.extend(proto, yamcs_protobuf_iam_iam_pb);
goog.exportSymbol('proto.yamcs.protobuf.auth.AuthInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.auth.OpenIDConnectInfo', null, global);
goog.exportSymbol('proto.yamcs.protobuf.auth.TokenResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.auth.AuthInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.auth.AuthInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.auth.AuthInfo.displayName = 'proto.yamcs.protobuf.auth.AuthInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.auth.OpenIDConnectInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.auth.OpenIDConnectInfo.displayName = 'proto.yamcs.protobuf.auth.OpenIDConnectInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.auth.TokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.auth.TokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.auth.TokenResponse.displayName = 'proto.yamcs.protobuf.auth.TokenResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.auth.AuthInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.auth.AuthInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.auth.AuthInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    requireauthentication: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    spnego: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    openid: (f = msg.getOpenid()) && proto.yamcs.protobuf.auth.OpenIDConnectInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.auth.AuthInfo}
 */
proto.yamcs.protobuf.auth.AuthInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.auth.AuthInfo;
  return proto.yamcs.protobuf.auth.AuthInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.auth.AuthInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.auth.AuthInfo}
 */
proto.yamcs.protobuf.auth.AuthInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequireauthentication(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpnego(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.auth.OpenIDConnectInfo;
      reader.readMessage(value,proto.yamcs.protobuf.auth.OpenIDConnectInfo.deserializeBinaryFromReader);
      msg.setOpenid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.auth.AuthInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.auth.AuthInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.auth.AuthInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOpenid();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yamcs.protobuf.auth.OpenIDConnectInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool requireAuthentication = 1;
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.getRequireauthentication = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.auth.AuthInfo} returns this
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.setRequireauthentication = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.AuthInfo} returns this
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.clearRequireauthentication = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.hasRequireauthentication = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool spnego = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.getSpnego = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.auth.AuthInfo} returns this
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.setSpnego = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.AuthInfo} returns this
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.clearSpnego = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.hasSpnego = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OpenIDConnectInfo openid = 3;
 * @return {?proto.yamcs.protobuf.auth.OpenIDConnectInfo}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.getOpenid = function() {
  return /** @type{?proto.yamcs.protobuf.auth.OpenIDConnectInfo} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.auth.OpenIDConnectInfo, 3));
};


/**
 * @param {?proto.yamcs.protobuf.auth.OpenIDConnectInfo|undefined} value
 * @return {!proto.yamcs.protobuf.auth.AuthInfo} returns this
*/
proto.yamcs.protobuf.auth.AuthInfo.prototype.setOpenid = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.AuthInfo} returns this
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.clearOpenid = function() {
  return this.setOpenid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.AuthInfo.prototype.hasOpenid = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.auth.OpenIDConnectInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    authorizationendpoint: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    scope: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.auth.OpenIDConnectInfo;
  return proto.yamcs.protobuf.auth.OpenIDConnectInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorizationendpoint(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.auth.OpenIDConnectInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string clientId = 1;
 * @return {string}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.getClientid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} returns this
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.setClientid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} returns this
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.clearClientid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.hasClientid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string authorizationEndpoint = 2;
 * @return {string}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.getAuthorizationendpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} returns this
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.setAuthorizationendpoint = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} returns this
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.clearAuthorizationendpoint = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.hasAuthorizationendpoint = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string scope = 3;
 * @return {string}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} returns this
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.setScope = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.OpenIDConnectInfo} returns this
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.clearScope = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.OpenIDConnectInfo.prototype.hasScope = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.auth.TokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.auth.TokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.auth.TokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessToken: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    tokenType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    expiresIn: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    refreshToken: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    user: (f = msg.getUser()) && yamcs_protobuf_iam_iam_pb.UserInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.auth.TokenResponse}
 */
proto.yamcs.protobuf.auth.TokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.auth.TokenResponse;
  return proto.yamcs.protobuf.auth.TokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.auth.TokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.auth.TokenResponse}
 */
proto.yamcs.protobuf.auth.TokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpiresIn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshToken(value);
      break;
    case 5:
      var value = new yamcs_protobuf_iam_iam_pb.UserInfo;
      reader.readMessage(value,yamcs_protobuf_iam_iam_pb.UserInfo.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.auth.TokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.auth.TokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.auth.TokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      yamcs_protobuf_iam_iam_pb.UserInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string access_token = 1;
 * @return {string}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.setAccessToken = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.clearAccessToken = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.hasAccessToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string token_type = 2;
 * @return {string}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.getTokenType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.setTokenType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.clearTokenType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.hasTokenType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 expires_in = 3;
 * @return {number}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.getExpiresIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.setExpiresIn = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.clearExpiresIn = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.hasExpiresIn = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string refresh_token = 4;
 * @return {string}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.getRefreshToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.setRefreshToken = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.clearRefreshToken = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.hasRefreshToken = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional yamcs.protobuf.iam.UserInfo user = 5;
 * @return {?proto.yamcs.protobuf.iam.UserInfo}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.getUser = function() {
  return /** @type{?proto.yamcs.protobuf.iam.UserInfo} */ (
    jspb.Message.getWrapperField(this, yamcs_protobuf_iam_iam_pb.UserInfo, 5));
};


/**
 * @param {?proto.yamcs.protobuf.iam.UserInfo|undefined} value
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
*/
proto.yamcs.protobuf.auth.TokenResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.auth.TokenResponse} returns this
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.auth.TokenResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.yamcs.protobuf.auth);
