// source: yamcs/protobuf/cop1/cop1.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var yamcs_api_annotations_pb = require('../../../yamcs/api/annotations_pb.js');
goog.object.extend(proto, yamcs_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.yamcs.protobuf.cop1.Clcw', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.Cop1Config', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.Cop1State', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.Cop1Status', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.DisableRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.GetConfigRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.GetStatusRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.InitializationType', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.InitializeRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.ResumeRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.SubscribeStatusRequest', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.TimeoutType', null, global);
goog.exportSymbol('proto.yamcs.protobuf.cop1.UpdateConfigRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.InitializeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.InitializeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.InitializeRequest.displayName = 'proto.yamcs.protobuf.cop1.InitializeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.UpdateConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.UpdateConfigRequest.displayName = 'proto.yamcs.protobuf.cop1.UpdateConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.GetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.GetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.GetConfigRequest.displayName = 'proto.yamcs.protobuf.cop1.GetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.GetStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.GetStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.GetStatusRequest.displayName = 'proto.yamcs.protobuf.cop1.GetStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.ResumeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.ResumeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.ResumeRequest.displayName = 'proto.yamcs.protobuf.cop1.ResumeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.DisableRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.DisableRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.DisableRequest.displayName = 'proto.yamcs.protobuf.cop1.DisableRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.Clcw = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.Clcw, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.Clcw.displayName = 'proto.yamcs.protobuf.cop1.Clcw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.Cop1Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.Cop1Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.Cop1Status.displayName = 'proto.yamcs.protobuf.cop1.Cop1Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.Cop1Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.Cop1Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.Cop1Config.displayName = 'proto.yamcs.protobuf.cop1.Cop1Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yamcs.protobuf.cop1.SubscribeStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yamcs.protobuf.cop1.SubscribeStatusRequest.displayName = 'proto.yamcs.protobuf.cop1.SubscribeStatusRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.InitializeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.InitializeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.InitializeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    link: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    clcwcheckinitializetimeout: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    vr: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.InitializeRequest;
  return proto.yamcs.protobuf.cop1.InitializeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.InitializeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 3:
      var value = /** @type {!proto.yamcs.protobuf.cop1.InitializationType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setClcwcheckinitializetimeout(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.InitializeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.InitializeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.InitializeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.yamcs.protobuf.cop1.InitializationType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.clearLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InitializationType type = 3;
 * @return {!proto.yamcs.protobuf.cop1.InitializationType}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.getType = function() {
  return /** @type {!proto.yamcs.protobuf.cop1.InitializationType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.yamcs.protobuf.cop1.InitializationType} value
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.setType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.clearType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 clcwCheckInitializeTimeout = 4;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.getClcwcheckinitializetimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.setClcwcheckinitializetimeout = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.clearClcwcheckinitializetimeout = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.hasClcwcheckinitializetimeout = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 vR = 5;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.getVr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.setVr = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.InitializeRequest} returns this
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.clearVr = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.InitializeRequest.prototype.hasVr = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.UpdateConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    link: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    cop1config: (f = msg.getCop1config()) && proto.yamcs.protobuf.cop1.Cop1Config.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.UpdateConfigRequest;
  return proto.yamcs.protobuf.cop1.UpdateConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.cop1.Cop1Config;
      reader.readMessage(value,proto.yamcs.protobuf.cop1.Cop1Config.deserializeBinaryFromReader);
      msg.setCop1config(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.UpdateConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCop1config();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yamcs.protobuf.cop1.Cop1Config.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.clearLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Cop1Config cop1Config = 3;
 * @return {?proto.yamcs.protobuf.cop1.Cop1Config}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.getCop1config = function() {
  return /** @type{?proto.yamcs.protobuf.cop1.Cop1Config} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.cop1.Cop1Config, 3));
};


/**
 * @param {?proto.yamcs.protobuf.cop1.Cop1Config|undefined} value
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} returns this
*/
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.setCop1config = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.UpdateConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.clearCop1config = function() {
  return this.setCop1config(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.UpdateConfigRequest.prototype.hasCop1config = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.GetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.GetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    link: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.GetConfigRequest}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.GetConfigRequest;
  return proto.yamcs.protobuf.cop1.GetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.GetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.GetConfigRequest}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.GetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.GetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.GetConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.GetConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.GetConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.GetConfigRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.clearLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.GetConfigRequest.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.GetStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.GetStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    link: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.GetStatusRequest}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.GetStatusRequest;
  return proto.yamcs.protobuf.cop1.GetStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.GetStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.GetStatusRequest}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.GetStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.GetStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.GetStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.GetStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.GetStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.GetStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.clearLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.GetStatusRequest.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.ResumeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.ResumeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.ResumeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    link: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.ResumeRequest}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.ResumeRequest;
  return proto.yamcs.protobuf.cop1.ResumeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.ResumeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.ResumeRequest}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.ResumeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.ResumeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.ResumeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.ResumeRequest} returns this
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.ResumeRequest} returns this
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.ResumeRequest} returns this
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.ResumeRequest} returns this
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.clearLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.ResumeRequest.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.DisableRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.DisableRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.DisableRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    link: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    setbypassall: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest}
 */
proto.yamcs.protobuf.cop1.DisableRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.DisableRequest;
  return proto.yamcs.protobuf.cop1.DisableRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.DisableRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest}
 */
proto.yamcs.protobuf.cop1.DisableRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSetbypassall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.DisableRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.DisableRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.DisableRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest} returns this
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest} returns this
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest} returns this
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest} returns this
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.clearLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool setBypassAll = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.getSetbypassall = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest} returns this
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.setSetbypassall = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.DisableRequest} returns this
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.clearSetbypassall = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.DisableRequest.prototype.hasSetbypassall = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.Clcw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.Clcw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.Clcw.toObject = function(includeInstance, msg) {
  var f, obj = {
    receptiontime: (f = msg.getReceptiontime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lockout: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    wait: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    retransmit: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    nr: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.Clcw}
 */
proto.yamcs.protobuf.cop1.Clcw.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.Clcw;
  return proto.yamcs.protobuf.cop1.Clcw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.Clcw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.Clcw}
 */
proto.yamcs.protobuf.cop1.Clcw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReceptiontime(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLockout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWait(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRetransmit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.Clcw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.Clcw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.Clcw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceptiontime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp receptionTime = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.getReceptiontime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
*/
proto.yamcs.protobuf.cop1.Clcw.prototype.setReceptiontime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.clearReceptiontime = function() {
  return this.setReceptiontime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.hasReceptiontime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool lockout = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.getLockout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.setLockout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.clearLockout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.hasLockout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool wait = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.getWait = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.setWait = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.clearWait = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.hasWait = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool retransmit = 4;
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.getRetransmit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.setRetransmit = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.clearRetransmit = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.hasRetransmit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 nR = 5;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.getNr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.setNr = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Clcw} returns this
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.clearNr = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Clcw.prototype.hasNr = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.Cop1Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.Cop1Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.Cop1Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    link: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    cop1active: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    setbypassall: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    clcw: (f = msg.getClcw()) && proto.yamcs.protobuf.cop1.Clcw.toObject(includeInstance, f),
    state: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    vs: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    nnr: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    waitqueuenumtc: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    sentqueuenumframes: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    outqueuenumframes: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    txcount: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status}
 */
proto.yamcs.protobuf.cop1.Cop1Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.Cop1Status;
  return proto.yamcs.protobuf.cop1.Cop1Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.Cop1Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status}
 */
proto.yamcs.protobuf.cop1.Cop1Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCop1active(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSetbypassall(value);
      break;
    case 3:
      var value = new proto.yamcs.protobuf.cop1.Clcw;
      reader.readMessage(value,proto.yamcs.protobuf.cop1.Clcw.deserializeBinaryFromReader);
      msg.setClcw(value);
      break;
    case 4:
      var value = /** @type {!proto.yamcs.protobuf.cop1.Cop1State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNnr(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWaitqueuenumtc(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSentqueuenumframes(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutqueuenumframes(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTxcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.Cop1Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.Cop1Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.Cop1Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getClcw();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yamcs.protobuf.cop1.Clcw.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.yamcs.protobuf.cop1.Cop1State} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * optional string link = 11;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearLink = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasLink = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool cop1Active = 1;
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getCop1active = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setCop1active = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearCop1active = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasCop1active = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool setBypassAll = 2;
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getSetbypassall = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setSetbypassall = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearSetbypassall = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasSetbypassall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Clcw clcw = 3;
 * @return {?proto.yamcs.protobuf.cop1.Clcw}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getClcw = function() {
  return /** @type{?proto.yamcs.protobuf.cop1.Clcw} */ (
    jspb.Message.getWrapperField(this, proto.yamcs.protobuf.cop1.Clcw, 3));
};


/**
 * @param {?proto.yamcs.protobuf.cop1.Clcw|undefined} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
*/
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setClcw = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearClcw = function() {
  return this.setClcw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasClcw = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Cop1State state = 4;
 * @return {!proto.yamcs.protobuf.cop1.Cop1State}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getState = function() {
  return /** @type {!proto.yamcs.protobuf.cop1.Cop1State} */ (jspb.Message.getFieldWithDefault(this, 4, 1));
};


/**
 * @param {!proto.yamcs.protobuf.cop1.Cop1State} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setState = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearState = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 vS = 5;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getVs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setVs = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearVs = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasVs = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 nnR = 6;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getNnr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setNnr = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearNnr = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasNnr = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 waitQueueNumTC = 7;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getWaitqueuenumtc = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setWaitqueuenumtc = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearWaitqueuenumtc = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasWaitqueuenumtc = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 sentQueueNumFrames = 8;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getSentqueuenumframes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setSentqueuenumframes = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearSentqueuenumframes = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasSentqueuenumframes = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 outQueueNumFrames = 9;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getOutqueuenumframes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setOutqueuenumframes = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearOutqueuenumframes = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasOutqueuenumframes = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 txCount = 10;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.getTxcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.setTxcount = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Status} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.clearTxcount = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Status.prototype.hasTxcount = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.Cop1Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.Cop1Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.Cop1Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    vcid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    bdabsolutepriority: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    windowwidth: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    timeouttype: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    txlimit: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    t1: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config}
 */
proto.yamcs.protobuf.cop1.Cop1Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.Cop1Config;
  return proto.yamcs.protobuf.cop1.Cop1Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.Cop1Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config}
 */
proto.yamcs.protobuf.cop1.Cop1Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVcid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBdabsolutepriority(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWindowwidth(value);
      break;
    case 5:
      var value = /** @type {!proto.yamcs.protobuf.cop1.TimeoutType} */ (reader.readEnum());
      msg.setTimeouttype(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTxlimit(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setT1(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.Cop1Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.Cop1Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.Cop1Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {!proto.yamcs.protobuf.cop1.TimeoutType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional uint32 vcId = 1;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.getVcid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.setVcid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.clearVcid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.hasVcid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool bdAbsolutePriority = 3;
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.getBdabsolutepriority = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.setBdabsolutepriority = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.clearBdabsolutepriority = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.hasBdabsolutepriority = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 windowWidth = 4;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.getWindowwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.setWindowwidth = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.clearWindowwidth = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.hasWindowwidth = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TimeoutType timeoutType = 5;
 * @return {!proto.yamcs.protobuf.cop1.TimeoutType}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.getTimeouttype = function() {
  return /** @type {!proto.yamcs.protobuf.cop1.TimeoutType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.yamcs.protobuf.cop1.TimeoutType} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.setTimeouttype = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.clearTimeouttype = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.hasTimeouttype = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 txLimit = 6;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.getTxlimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.setTxlimit = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.clearTxlimit = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.hasTxlimit = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 t1 = 7;
 * @return {number}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.getT1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.setT1 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.Cop1Config} returns this
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.clearT1 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.Cop1Config.prototype.hasT1 = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yamcs.protobuf.cop1.SubscribeStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    link: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yamcs.protobuf.cop1.SubscribeStatusRequest;
  return proto.yamcs.protobuf.cop1.SubscribeStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yamcs.protobuf.cop1.SubscribeStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string instance = 1;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.getInstance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.setInstance = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.clearInstance = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.setLink = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yamcs.protobuf.cop1.SubscribeStatusRequest} returns this
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.clearLink = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yamcs.protobuf.cop1.SubscribeStatusRequest.prototype.hasLink = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.yamcs.protobuf.cop1.InitializationType = {
  WITH_CLCW_CHECK: 1,
  WITHOUT_CLCW_CHECK: 2,
  UNLOCK: 3,
  SET_VR: 4
};

/**
 * @enum {number}
 */
proto.yamcs.protobuf.cop1.Cop1State = {
  ACTIVE: 1,
  RETRANSMIT_WITHOUT_WAIT: 2,
  RETRANSMIT_WITH_WAIT: 3,
  INITIALIZING_WITHOUT_BC: 4,
  INITIALIZING_WITH_BC: 5,
  UNINITIALIZED: 6,
  SUSPENDED: 7
};

/**
 * @enum {number}
 */
proto.yamcs.protobuf.cop1.TimeoutType = {
  UNINITIALIZE: 0,
  SUSPEND: 1
};

goog.object.extend(exports, proto.yamcs.protobuf.cop1);
